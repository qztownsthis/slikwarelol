setfpscap(1000)

if getgenv().executed then
        return  
    end
   getgenv().executed = true
print([[

  ______   __  __  __              __       __                               
 /      \ /  |/  |/  |            /  |  _  /  |                              
/$$$$$$  |$$ |$$/ $$ |   __       $$ | / \ $$ |  ______    ______    ______  
$$ \__$$/ $$ |/  |$$ |  /  |      $$ |/$  \$$ | /      \  /      \  /      \ 
$$      \ $$ |$$ |$$ |_/$$/       $$ /$$$  $$ | $$$$$$  |/$$$$$$  |/$$$$$$  |
 $$$$$$  |$$ |$$ |$$   $$<        $$ $$/$$ $$ | /    $$ |$$ |  $$/ $$    $$ |
/  \__$$ |$$ |$$ |$$$$$$  \       $$$$/  $$$$ |/$$$$$$$ |$$ |      $$$$$$$$/ 
$$    $$/ $$ |$$ |$$ | $$  |      $$$/    $$$ |$$    $$ |$$ |      $$       |
 $$$$$$/  $$/ $$/ $$/   $$/       $$/      $$/  $$$$$$$/ $$/        $$$$$$$/ 
                                                                             
                                                                             
                                                                             ]])

local Compkiller = loadstring(game:HttpGet("https://raw.githubusercontent.com/XTERNALxyz/PRJCT/refs/heads/main/source.luau"))();

local Notifier = Compkiller.newNotify();

local ConfigManager = Compkiller:ConfigManager({
	Directory = "SlikWare",
	Config = "Config",
});

local display_name = game:GetService("Players").LocalPlayer.DisplayName

Compkiller:Loader("rbxassetid://81126811568703", 2.5).yield();

local Window = Compkiller.new({
	Name = "SLIK WARE",
	Keybind = "RightControl",
	Logo = "rbxassetid://113498561603079",
	Scale = Compkiller.Scale.Window,
	TextSize = 15,
});

Notifier.new({
    Title = "Slik",
    Content = "Hello! " .. display_name .. " â€“ Hope You Enjoy",
    Duration = 3,
    Icon = "rbxassetid://113498561603079"
})


local Watermark = Window:Watermark();

Watermark:AddText({
    Icon = "user",
    Text = display_name,
});
Watermark:AddText({
	Icon = "server",
	Text = "SLIK WARE",
});
Watermark:AddText({
    Icon = "clock",
    Text = Compkiller:GetDate(),
});

Window:DrawCategory({Name = "Main"});

local main = Window:DrawTab({ Name = "Main", Icon = "house", EnableScrolling = true});
local hits = Window:DrawTab({ Name = "Hit Settings", Icon = "wrench", EnableScrolling = true});
local rage = Window:DrawTab({Name = "Rage", Icon = "atom", EnableScrolling = true});

Window:DrawCategory({Name = "Misc"});

local msc = Window:DrawTab({Name = "Visuals", Icon = "laptop", EnableScrolling = true});
local cah = Window:DrawTab({Name = "Character", Icon = "laptop-2", EnableScrolling = true});

getgenv().x06y = {
    Camlock = {
    	enabled = true,
        hitpart = "Head",
        smoothness = 1,
        Cxprediction = 0.159,
        Cyprediction = 0.1,
        resolver = false,
        target = nil,
        easing_style = Enum.EasingStyle.Sine,
        easing_direction = Enum.EasingDirection.InOut,
        Shake = {
        	shake_x = 0,
            shake_y = 0,
            shake_z = 0
        }
     },
     
     AA = {
     	enabled = true,
         hit_part = "HumanoidRootPart",
         jump_offset = -0.3,
         fall_offset = 0.27,
         delay = 0.1
     },
     
     Targetaim = {
     	enabled = true,
         hitpart = "HumanoidRootPart",
         Horizontal = 0.1595,
         Vertical = 0.1,
         target = nil
    }
}
         
local x = getgenv().x06y
local locking = false

local TweenService = game:GetService("TweenService")
local CoreGui = game:GetService("CoreGui")
local replicatedStorage = game:GetService("ReplicatedStorage")
local Lighting = game:GetService("Lighting")
local SoundService = game:GetService("SoundService")
local Runservice = game:GetService("RunService")
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local PlayerGui = LocalPlayer:WaitForChild("PlayerGui")
local Camera = workspace.CurrentCamera

local function FindNearestEnemy()
  local closest = nil
	local shortestDist = math.huge
	for _, plr in ipairs(Players:GetPlayers()) do
		if plr ~= LocalPlayer and plr.Character and plr.Character:FindFirstChild("HumanoidRootPart") then
			local pos = plr.Character.HumanoidRootPart.Position
			local screenPos, onScreen = Camera:WorldToViewportPoint(pos)
			if onScreen then
				local dist = (Vector2.new(screenPos.X, screenPos.Y) - Camera.ViewportSize / 2).Magnitude
				if dist < shortestDist then
					shortestDist = dist
					closest = plr
				end
			end
		end
	end
	return closest
end

local ScreenGui = Instance.new("ScreenGui")
local Frame = Instance.new("Frame")
local TextButton = Instance.new("ImageButton")
local UICorner = Instance.new("UICorner")

local CoreGui = game:GetService("CoreGui")
 ScreenGui.Parent = CoreGui
ScreenGui.ResetOnSpawn = false
ScreenGui.Enabled = true

Frame.Parent = ScreenGui
Frame.BackgroundTransparency = 1
Frame.Position = UDim2.new(0.5, 0, 0.5, 0)
Frame.Size = UDim2.new(0, 90, 0, 90)
Frame.Active = true

TextButton.Parent = Frame
TextButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
TextButton.BackgroundTransparency = 0.5
TextButton.Size = UDim2.new(0, 75, 0, 75)
TextButton.AnchorPoint = Vector2.new(0.5, 0.5)
TextButton.Position = UDim2.new(0.5, 0, 0.5, 0)
TextButton.Image = "rbxassetid://70418888040819"
TextButton.Active = true
TextButton.Draggable = true

local Outline = Instance.new("UIStroke")
Outline.Color = Color3.fromRGB(255, 255, 255)
Outline.Thickness = 2
Outline.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
Outline.Parent = TextButton

local Gradient = Instance.new("UIGradient")
Gradient.Color = ColorSequence.new({
    ColorSequenceKeypoint.new(0, Color3.fromRGB(255, 255, 255)), 
    ColorSequenceKeypoint.new(1, Color3.fromRGB(130, 130, 130))  
})
Gradient.Rotation = 45
Gradient.Parent = Outline

UICorner.Parent = TextButton
UICorner.CornerRadius = UDim.new(0, 12)

TextButton.MouseButton1Click:Connect(function()
    local N = getgenv().x06y
    
    if not (N.Camlock.enabled or N.Targetaim.enabled) then
            return
        end

        if locking then
            N.Camlock.target = nil
            N.Targetaim.target = nil
            locking = false
            TextButton.Image = "rbxassetid://70418888040819"
            Notifier.new({ Title = "Slik", Content = "Untargeted", Duration = 2, Icon = "rbxassetid://113498561603079" });
            return
        end

        local enemy = FindNearestEnemy()
        if not enemy then
            Notifier.new({ Title = "Slik", Content = "Target Not Found", Duration = 2, Icon = "rbxassetid://113498561603079" });
            return
        end

        if N.Camlock.enabled then
            N.Camlock.target = enemy
        end
        if N.Targetaim.enabled then
            N.Targetaim.target = enemy
        end

        locking = true
        TextButton.Image = "rbxassetid://108704915179876"
        Notifier.new({ Title = "Slik", Content = "Target: " .. enemy.DisplayName, Duration = 2, Icon = "rbxassetid://113498561603079" });
end)

Runservice.Heartbeat:Connect(function()
    if x.Camlock.enabled then
        local targets = x.Camlock.target
        if targets and targets.Character then
            local part = targets.Character:FindFirstChild(x.Camlock.hitpart)
            if part then
                local pred = part.Position + (part.Velocity * x.Camlock.Cxprediction) + Vector3.new(0, x.Camlock.Cyprediction, 0)
                local shakeX = (math.random() * 2 - 1) * x.Camlock.Shake.shake_x
                local shakeY = (math.random() * 2 - 1) * x.Camlock.Shake.shake_y
                local shakeZ = (math.random() * 2 - 1) * x.Camlock.Shake.shake_z
                pred = pred + Vector3.new(shakeX, shakeY, shakeZ)
                local lerp = CFrame.new(Camera.CFrame.Position, pred)
                Camera.CFrame = Camera.CFrame:Lerp(lerp, x.Camlock.smoothness, x.Camlock.easing_style, x.Camlock.easing_direction)
            end
        end
    end
    
    if x.AA.enabled then
        local Victim = x.Targetaim.target
        if Victim and Victim.Character then
            local TargetRootPart = Victim.Character:FindFirstChild(x.AA.hit_part)
            if TargetRootPart then
                local TargetVel = TargetRootPart.Velocity
                if TargetVel.Y > 25 then
                    local Character = LocalPlayer.Character
                    if Character then
                        local Tool = Character:FindFirstChildOfClass("Tool")
                        if Tool then
                            task.wait(x.AA.delay)
                            Tool:Activate()
                        end
                    end
                end
            end
        end
    end
end)

local mt = getrawmetatable(game)
local oldNameCall = mt.__namecall
setreadonly(mt, false)

mt.__namecall = newcclosure(function(Self, ...)
    local args = {...}
    local methodName = getnamecallmethod()
    if not checkcaller() and methodName == "FireServer" and x.Targetaim.enabled then
        local target = x.Targetaim.target
        for i, Argument in ipairs(args) do
            if typeof(Argument) == "Vector3" and target and target.Character then
                args[i] = target.Character[x.Targetaim.hitpart].Position + (target.Character[x.Targetaim.hitpart].Velocity * x.Targetaim.Horizontal) + Vector3.new(0, x.Targetaim.Vertical, 0) + Vector3.new(0, x.AA.jump_offset + x.AA.fall_offset, 0)
            end
        end
    end
    return oldNameCall(Self, unpack(args))
end)

setreadonly(mt, true)

local resolverCache = {}

local function onHeartbeat()
    if not x.Camlock.resolver then return end

    local now = tick()

    for _, plr in ipairs(Players:GetPlayers()) do
        if plr == LocalPlayer then continue end
        if not (plr.Character and plr.Character:FindFirstChildOfClass("Humanoid")) then
            resolverCache[plr] = nil -- wipe stale data
            continue
        end

        local char = plr.Character
        local human = char:FindFirstChildOfClass("Humanoid")

        local watch = {
            "HumanoidRootPart","Head","UpperTorso","LowerTorso",
            "LeftUpperArm","RightUpperArm","LeftLowerArm","RightLowerArm",
            "LeftUpperLeg","RightUpperLeg","LeftLowerLeg","RightLowerLeg",
            "LeftHand","RightHand","LeftFoot","RightFoot"
        }

        for _, name in ipairs(watch) do
            local part = char:FindFirstChild(name)
            if not part then continue end

            resolverCache[plr] = resolverCache[plr] or {}
            local entry = resolverCache[plr][name]

            local curPos = part.Position
            if entry then
                local dt = now - entry.time
                if dt > 0 then
                    local rawVel = (curPos - entry.pos) / dt
                    local alpha = 0.15
                    local vel = entry.vel or rawVel
                    vel = vel:Lerp(rawVel, alpha)
                    entry.vel = vel

                   part.Velocity = vel
                   part.AssemblyLinearVelocity = vel
               end
           end


            resolverCache[plr][name] = {pos = curPos, time = now}
        end
    end
end

Runservice.Heartbeat:Connect(onHeartbeat)

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local LocalPlayer = Players.LocalPlayer

getgenv().LookAtEnabled = false

RunService.RenderStepped:Connect(function()
    if getgenv().LookAtEnabled then
        local char = LocalPlayer.Character
        local root = char and char:FindFirstChild("HumanoidRootPart")
        local targetPlayer = x06y.Targetaim and x06y.Targetaim.target or x06y.Camlock  and x06y.Camlock.target

        if root and targetPlayer and targetPlayer.Character then
            local targetRoot = targetPlayer.Character:FindFirstChild("HumanoidRootPart")
            if targetRoot then
                local targetPos = Vector3.new(targetRoot.Position.X, root.Position.Y, targetRoot.Position.Z)
                root.CFrame = CFrame.new(root.Position, targetPos)
            end
        end
    end
end)

getgenv().AntiAimViewer = {
    enabled = false,
}

local China = setmetatable({}, {
    __index = function(_, service)
        return game:GetService(service)
    end
})

local Players = China.Players
local ReplicatedStorage = China.ReplicatedStorage
local LocalPlayer = Players.LocalPlayer
local Mouse = LocalPlayer:GetMouse()
local MainEvent = ReplicatedStorage:FindFirstChild("MainEvent")

local function Bypass(Entity)
    Entity.ChildAdded:Connect(function(Child)
        if Child:IsA("Tool") then
            Child.Activated:Connect(function()
                if MainEvent then
                    MainEvent:FireServer("UpdateMousePos", Mouse.Hit.Position)
                end
            end)
        end
    end)
end

local function Alive(Player)
    return Player and Player.Character and Player.Character:FindFirstChild("Humanoid") and Player.Character:FindFirstChild("Head")
end

LocalPlayer.CharacterAdded:Connect(function(Character)
    Bypass(Character)
end)

if getgenv().AntiAimViewer then
    if Alive(LocalPlayer) then
        LocalPlayer.Character.Humanoid:UnequipTools()
        Bypass(LocalPlayer.Character)
    end
end

local Hook
Hook = hookmetamethod(game, "__namecall", function(self, ...)
    local Args = {...}
    local Method = getnamecallmethod()

    if not checkcaller() and Method == "FireServer" and self.Name == "MainEvent" and Args[1] == "UpdateMousePos" then
        if getgenv().AntiAimViewer then
            Args[2] = Mouse.Hit.Position
        end
        return self.FireServer(self, unpack(Args))
    end

    return Hook(self, ...)
end)

getgenv().hiteffects = {
    Types = {},                        
    Enabled = false,
    HitEffectType = "Nova",                 
    HitEffectColor = Color3.fromRGB(255, 255, 255), 
    Duration = 2                       
}

local hit = getgenv().hiteffects

local HitEffectModule = {
    Locals = {
        Type = {
            ["Nova"] = nil,
            ["Crescent Slash"] = nil,
            ["Coom"] = nil,
            ["Cosmic Explosion"] = nil,
            ["Slash"] = nil,
            ["Atomic Slash"] = nil,
            ["AuraBurst"] = nil,
            ["Thunder"] = nil, 
        },
    },
    Functions = {},
    Settings = {HitEffect = {Color = hit.HitEffectColor}}
}

local hiteffect = {
    "Nova",
    "Crescent Slash",
    "Coom",
    "Cosmic Explosion",
    "Slash",
    "Atomic Slash",
    "AuraBurst",
    "Thunder"
}

--// Crescent Slash

do
local Insane = Instance.new("Part")
Insane.Parent = ReplicatedStorage

local Attachment = Instance.new("Attachment")
Attachment.Name = "Attachment"
Attachment.Parent = Insane

HitEffectModule.Locals.Type["Crescent Slash"] = Attachment

local Glow = Instance.new("ParticleEmitter")
Glow.Name = "Glow"
Glow.Lifetime = NumberRange.new(0.16, 0.16)
Glow.Transparency = NumberSequence.new({NumberSequenceKeypoint.new(0, 1), NumberSequenceKeypoint.new(0.1421725, 0.6182796), NumberSequenceKeypoint.new(1, 1)})
Glow.Color = ColorSequence.new(Color3.fromRGB(91, 177, 252))
Glow.Speed = NumberRange.new(0, 0)
Glow.Brightness = 5
Glow.Size = NumberSequence.new(9.1873131, 16.5032349)
Glow.Enabled = false
Glow.ZOffset = -0.0565939
Glow.Rate = 50
Glow.Texture = "rbxassetid://8708637750"

local Gradient1 = Instance.new("ParticleEmitter")
Gradient1.Name = "Gradient1"
Gradient1.Lifetime = NumberRange.new(0.3, 0.3)
Gradient1.Transparency = NumberSequence.new({NumberSequenceKeypoint.new(0, 1), NumberSequenceKeypoint.new(0.15, 0.3), NumberSequenceKeypoint.new(1, 1)})
Gradient1.Color = ColorSequence.new(Color3.fromRGB(115, 201, 255))
Gradient1.Speed = NumberRange.new(0, 0)
Gradient1.Brightness = 6
Gradient1.Size = NumberSequence.new(0, 11.6261358)
Gradient1.Enabled = false
Gradient1.ZOffset = 0.9187313
Gradient1.Rate = 50
Gradient1.Texture = "rbxassetid://8196169974"
Gradient1.Parent = Attachment

local Shards = Instance.new("ParticleEmitter")
Shards.Name = "Shards"
Shards.Lifetime = NumberRange.new(0.19, 0.7)
Shards.SpreadAngle = Vector2.new(-90, 90)
Shards.Color = ColorSequence.new(Color3.fromRGB(108, 184, 255))
Shards.Drag = 10
Shards.VelocitySpread = -90
Shards.Squash = NumberSequence.new({NumberSequenceKeypoint.new(0, 1), NumberSequenceKeypoint.new(0.5705521, 0.4125001), NumberSequenceKeypoint.new(1, -0.9375)})
Shards.Speed = NumberRange.new(97.7530136, 146.9970093)
Shards.Brightness = 4
Shards.Size = NumberSequence.new({NumberSequenceKeypoint.new(0, 0), NumberSequenceKeypoint.new(0.284774, 1.2389833, 0.1534118), NumberSequenceKeypoint.new(1, 0)})
Shards.Enabled = false
Shards.Acceleration = Vector3.new(0, -56.961341857910156, 0)
Shards.ZOffset = 0.5705321
Shards.Rate = 50
Shards.Texture = "rbxassetid://8030734851"
Shards.Rotation = NumberRange.new(90, 90)
Shards.Orientation = Enum.ParticleOrientation.VelocityParallel
Shards.Parent = Attachment

local ShardsDark = Instance.new("ParticleEmitter")
ShardsDark.Name = "ShardsDark"
ShardsDark.Lifetime = NumberRange.new(0.19, 0.35)
ShardsDark.SpreadAngle = Vector2.new(-90, 90)
ShardsDark.Color = ColorSequence.new(Color3.fromRGB(108, 184, 255))
ShardsDark.Drag = 10
ShardsDark.VelocitySpread = -90
ShardsDark.Squash = NumberSequence.new({NumberSequenceKeypoint.new(0, 1), NumberSequenceKeypoint.new(0.5705521, 0.4125001), NumberSequenceKeypoint.new(1, -0.9375)})
ShardsDark.Speed = NumberRange.new(97.7530136, 146.9970093)
ShardsDark.Brightness = 4
ShardsDark.Size = NumberSequence.new({NumberSequenceKeypoint.new(0, 0), NumberSequenceKeypoint.new(0.290774, 0.6734411, 0.1534118), NumberSequenceKeypoint.new(1, 0)})
ShardsDark.Enabled = false
ShardsDark.ZOffset = 0.5705321
ShardsDark.Rate = 50
ShardsDark.Texture = "rbxassetid://8030734851"
ShardsDark.Rotation = NumberRange.new(90, 90)
ShardsDark.Orientation = Enum.ParticleOrientation.VelocityParallel
ShardsDark.Parent = Attachment

local Specs = Instance.new("ParticleEmitter")
Specs.Name = "Specs"
Specs.Lifetime = NumberRange.new(0.33, 1.4)
Specs.SpreadAngle = Vector2.new(360, -1000)
Specs.Color = ColorSequence.new(Color3.fromRGB(98, 174, 255))
Specs.Drag = 10
Specs.VelocitySpread = 360
Specs.Speed = NumberRange.new(36.7492523, 146.9970093)
Specs.Brightness = 7
Specs.Size = NumberSequence.new({NumberSequenceKeypoint.new(0, 0), NumberSequenceKeypoint.new(0.200774, 2.0311937, 0.4363973), NumberSequenceKeypoint.new(1, 0)})
Specs.Enabled = false
Specs.Acceleration = Vector3.new(0, 36.74925231933594, 0)
Specs.Rate = 50
Specs.Texture = "rbxassetid://8030760338"
Specs.EmissionDirection = Enum.NormalId.Right
Specs.Parent = Attachment

local Specs1 = Instance.new("ParticleEmitter")
Specs1.Name = "Specs"
Specs1.Lifetime = NumberRange.new(0.33, 1.75)
Specs1.SpreadAngle = Vector2.new(90, -90)
Specs1.Color = ColorSequence.new(Color3.fromRGB(106, 171, 255))
Specs1.Drag = 9
Specs1.VelocitySpread = 90
Specs1.Speed = NumberRange.new(42.2616425, 73.4985046)
Specs1.Brightness = 6
Specs1.Size = NumberSequence.new({NumberSequenceKeypoint.new(0, 0), NumberSequenceKeypoint.new(0.210774, 0.3978962, 0.1855686), NumberSequenceKeypoint.new(1, 0)})
Specs1.Enabled = false
Specs1.Acceleration = Vector3.new(0, -20.21208953857422, 0)
Specs1.ZOffset = 0.5144895
Specs1.Rate = 50
Specs1.Texture = "rbxassetid://8030760338"
Specs1.Parent = Attachment

local Specs2 = Instance.new("ParticleEmitter")
Specs2.Name = "Specs"
Specs2.Lifetime = NumberRange.new(0.19, 1.2)
Specs2.SpreadAngle = Vector2.new(360, -1000)
Specs2.Color = ColorSequence.new(Color3.fromRGB(98, 174, 255))
Specs2.Drag = 10
Specs2.VelocitySpread = 360
Specs2.Speed = NumberRange.new(36.7492523, 146.9970093)
Specs2.Brightness = 7
Specs2.Size = NumberSequence.new({NumberSequenceKeypoint.new(0, 0), NumberSequenceKeypoint.new(0.200774, 2.0311937, 0.4363973), NumberSequenceKeypoint.new(1, 0)})
Specs2.Enabled = false
Specs2.Acceleration = Vector3.new(0, 36.74925231933594, 0)
Specs2.Rate = 50
Specs2.Texture = "rbxassetid://8030760338"
Specs2.EmissionDirection = Enum.NormalId.Right
Specs2.Parent = Attachment

local Specs21 = Instance.new("ParticleEmitter")
Specs21.Name = "Specs2"
Specs21.Lifetime = NumberRange.new(0.19, 1.35)
Specs21.SpreadAngle = Vector2.new(90, -90)
Specs21.Color = ColorSequence.new(Color3.fromRGB(106, 171, 255))
Specs21.Drag = 12
Specs21.VelocitySpread = 90
Specs21.Speed = NumberRange.new(42.2616425, 73.4985046)
Specs21.Brightness = 6
Specs21.Size = NumberSequence.new({NumberSequenceKeypoint.new(0, 0), NumberSequenceKeypoint.new(0.216774, 0.5721694, 0.1855686), NumberSequenceKeypoint.new(1, 0)})
Specs21.Enabled = false
Specs21.Acceleration = Vector3.new(0, -20.21208953857422, 0)
Specs21.ZOffset = 0.5144895
Specs21.Rate = 50
Specs21.Texture = "rbxassetid://8030760338"
Specs21.Parent = Attachment

local ddddddddddddddddddd = Instance.new("ParticleEmitter")
ddddddddddddddddddd.Name = "ddddddddddddddddddd"
ddddddddddddddddddd.Lifetime = NumberRange.new(0.19, 0.37)
ddddddddddddddddddd.SpreadAngle = Vector2.new(90, -90)
ddddddddddddddddddd.LockedToPart = true
ddddddddddddddddddd.Transparency = NumberSequence.new({NumberSequenceKeypoint.new(0, 0), NumberSequenceKeypoint.new(0.6429392, 0), NumberSequenceKeypoint.new(1, 0)})
ddddddddddddddddddd.LightEmission = 1
ddddddddddddddddddd.Color = ColorSequence.new(Color3.fromRGB(90, 184, 255), Color3.fromRGB(165, 251, 255))
ddddddddddddddddddd.Drag = 6
ddddddddddddddddddd.TimeScale = 0.7
ddddddddddddddddddd.VelocitySpread = 90
ddddddddddddddddddd.Speed = NumberRange.new(81.5833435, 110.2477646)
ddddddddddddddddddd.Size = NumberSequence.new({NumberSequenceKeypoint.new(0, 0), NumberSequenceKeypoint.new(0.410774, 0.6711507, 0.3356177), NumberSequenceKeypoint.new(1, 0)})
ddddddddddddddddddd.Enabled = false
ddddddddddddddddddd.Acceleration = Vector3.new(0, -81.58334350585938, 0)
ddddddddddddddddddd.ZOffset = 0.8345273
ddddddddddddddddddd.Rate = 50
ddddddddddddddddddd.Texture = "rbxassetid://1053546634"
ddddddddddddddddddd.RotSpeed = NumberRange.new(-444, 166)
ddddddddddddddddddd.Rotation = NumberRange.new(-360, 360)
ddddddddddddddddddd.Parent = Attachment

local large_shard = Instance.new("ParticleEmitter")
large_shard.Name = "large_shard"
large_shard.Lifetime = NumberRange.new(0.19, 0.28)
large_shard.SpreadAngle = Vector2.new(-90, 90)
large_shard.Color = ColorSequence.new(Color3.fromRGB(108, 184, 255))
large_shard.Drag = 10
large_shard.VelocitySpread = -90
large_shard.Squash = NumberSequence.new({NumberSequenceKeypoint.new(0, 1), NumberSequenceKeypoint.new(0.5705521, 0.4125001), NumberSequenceKeypoint.new(1, -0.9375)})
large_shard.Speed = NumberRange.new(97.7530136, 146.9970093)
large_shard.Brightness = 4
large_shard.Size = NumberSequence.new({NumberSequenceKeypoint.new(0, 0), NumberSequenceKeypoint.new(0.260774, 3.515605, 0.1534118), NumberSequenceKeypoint.new(1, 0)})
large_shard.Enabled = false
large_shard.ZOffset = 0.5705321
large_shard.Rate = 50
large_shard.Texture = "rbxassetid://8030734851"
large_shard.Rotation = NumberRange.new(90, 90)
large_shard.Orientation = Enum.ParticleOrientation.VelocityParallel
large_shard.Parent = Attachment

local out_Specs = Instance.new("ParticleEmitter")
out_Specs.Name = "out_Specs"
out_Specs.Lifetime = NumberRange.new(0.19, 1)
out_Specs.SpreadAngle = Vector2.new(44, -1000)
out_Specs.Color = ColorSequence.new(Color3.fromRGB(98, 174, 255))
out_Specs.Drag = 10
out_Specs.VelocitySpread = 44
out_Specs.Speed = NumberRange.new(36.7492523, 146.9970093)
out_Specs.Brightness = 7
out_Specs.Size = NumberSequence.new({NumberSequenceKeypoint.new(0, 0), NumberSequenceKeypoint.new(0.244774, 0.5469525, 0.1433053), NumberSequenceKeypoint.new(1, 0)})
out_Specs.Enabled = false
out_Specs.Acceleration = Vector3.new(0, -3.215559720993042, 0)
out_Specs.Rate = 50
out_Specs.Texture = "rbxassetid://8030760338"
out_Specs.EmissionDirection = Enum.NormalId.Right
out_Specs.Parent = Attachment

local Effect = Instance.new("ParticleEmitter")
Effect.Name = "Effect"
Effect.Lifetime = NumberRange.new(0.4, 0.7)
Effect.FlipbookLayout = Enum.ParticleFlipbookLayout.Grid4x4
Effect.SpreadAngle = Vector2.new(360, -360)
Effect.LockedToPart = true
Effect.Transparency = NumberSequence.new({NumberSequenceKeypoint.new(0, 1), NumberSequenceKeypoint.new(0.1070999, 0.19375), NumberSequenceKeypoint.new(0.7761194, 0.88125), NumberSequenceKeypoint.new(1, 1)})
Effect.LightEmission = 1
Effect.Color = ColorSequence.new(Color3.fromRGB(92, 161, 252))
Effect.Drag = 1
Effect.VelocitySpread = 360
Effect.Speed = NumberRange.new(0.0036749, 0.0036749)
Effect.Brightness = 2.0999999
Effect.Size = NumberSequence.new(6.9680691, 9.9213123)
Effect.Enabled = false
Effect.ZOffset = 0.4777403
Effect.Rate = 50
Effect.Texture = "rbxassetid://9484012464"
Effect.RotSpeed = NumberRange.new(-150, -150)
Effect.FlipbookMode = Enum.ParticleFlipbookMode.OneShot
Effect.Rotation = NumberRange.new(50, 50)
Effect.Orientation = Enum.ParticleOrientation.VelocityPerpendicular
Effect.Parent = Attachment

local Crescents = Instance.new("ParticleEmitter")
Crescents.Name = "Crescents"
Crescents.Lifetime = NumberRange.new(0.19, 0.38)
Crescents.SpreadAngle = Vector2.new(-360, 360)
Crescents.Transparency = NumberSequence.new({NumberSequenceKeypoint.new(0, 1), NumberSequenceKeypoint.new(0.1932907, 0), NumberSequenceKeypoint.new(0.778754, 0), NumberSequenceKeypoint.new(1, 1)})
Crescents.LightEmission = 1
Crescents.Color = ColorSequence.new(Color3.fromRGB(92, 161, 252))
Crescents.VelocitySpread = -360
Crescents.Speed = NumberRange.new(0.0826858, 0.0826858)
Crescents.Brightness = 20
Crescents.Size = NumberSequence.new({NumberSequenceKeypoint.new(0, 0), NumberSequenceKeypoint.new(0.398774, 8.8026266, 2.2834616), NumberSequenceKeypoint.new(1, 11.477972, 1.860431)})
Crescents.Enabled = false
Crescents.ZOffset = 0.4542207
Crescents.Rate = 50
Crescents.Texture = "rbxassetid://12509373457"
Crescents.RotSpeed = NumberRange.new(800, 1000)
Crescents.Rotation = NumberRange.new(-360, 360)
Crescents.Orientation = Enum.ParticleOrientation.VelocityPerpendicular
Crescents.Parent = Attachment

Insane.Parent = workspace
end

do --// Cosmic Explosion

local Part = Instance.new("Part")

Part.Parent = ReplicatedStorage

local Attachment = Instance.new("Attachment")
Attachment.Name = "Attachment"
Attachment.Parent = Part

HitEffectModule.Locals.Type["Cosmic Explosion"] = Attachment

local Glow = Instance.new("ParticleEmitter")
Glow.Name = "Glow"
Glow.Lifetime = NumberRange.new(0.16, 0.16)
Glow.Transparency = NumberSequence.new({NumberSequenceKeypoint.new(0, 1), NumberSequenceKeypoint.new(0.1421725, 0.6182796), NumberSequenceKeypoint.new(1, 1)})
Glow.Color = ColorSequence.new(Color3.fromRGB(173, 82, 252))
Glow.Speed = NumberRange.new(0, 0)
Glow.Brightness = 5
Glow.Size = NumberSequence.new(9.1873131, 16.5032349)
Glow.Enabled = false
Glow.ZOffset = -0.0565939
Glow.Rate = 50
Glow.Texture = "rbxassetid://8708637750"
Glow.Parent = Attachment

local Effect = Instance.new("ParticleEmitter")
Effect.Name = "Effect"
Effect.Lifetime = NumberRange.new(0.4, 0.7)
Effect.FlipbookLayout = Enum.ParticleFlipbookLayout.Grid4x4
Effect.SpreadAngle = Vector2.new(360, -360)
Effect.LockedToPart = true
Effect.Transparency = NumberSequence.new({NumberSequenceKeypoint.new(0, 1), NumberSequenceKeypoint.new(0.1070999, 0.19375), NumberSequenceKeypoint.new(0.7761194, 0.88125), NumberSequenceKeypoint.new(1, 1)})
Effect.LightEmission = 1
Effect.Color = ColorSequence.new(Color3.fromRGB(173, 82, 252))
Effect.Drag = 1
Effect.VelocitySpread = 360
Effect.Speed = NumberRange.new(0.0036749, 0.0036749)
Effect.Brightness = 2.0999999
Effect.Size = NumberSequence.new(6.9680691, 9.9213123)
Effect.Enabled = false
Effect.ZOffset = 0.4777403
Effect.Rate = 50
Effect.Texture = "rbxassetid://9484012464"
Effect.RotSpeed = NumberRange.new(-150, -150)
Effect.FlipbookMode = Enum.ParticleFlipbookMode.OneShot
Effect.Rotation = NumberRange.new(50, 50)
Effect.Orientation = Enum.ParticleOrientation.VelocityPerpendicular
Effect.Parent = Attachment

local Gradient1 = Instance.new("ParticleEmitter")
Gradient1.Name = "Gradient1"
Gradient1.Lifetime = NumberRange.new(0.3, 0.3)
Gradient1.Transparency = NumberSequence.new({NumberSequenceKeypoint.new(0, 1), NumberSequenceKeypoint.new(0.15, 0.3), NumberSequenceKeypoint.new(1, 1)})
Gradient1.Color = ColorSequence.new(Color3.fromRGB(173, 82, 252))
Gradient1.Speed = NumberRange.new(0, 0)
Gradient1.Brightness = 6
Gradient1.Size = NumberSequence.new(0, 11.6261358)
Gradient1.Enabled = false
Gradient1.ZOffset = 0.9187313
Gradient1.Rate = 50
Gradient1.Texture = "rbxassetid://8196169974"
Gradient1.Parent = Attachment

local Shards = Instance.new("ParticleEmitter")
Shards.Name = "Shards"
Shards.Lifetime = NumberRange.new(0.19, 0.7)
Shards.SpreadAngle = Vector2.new(-90, 90)
Shards.Color = ColorSequence.new(Color3.fromRGB(173, 82, 252))
Shards.Drag = 10
Shards.VelocitySpread = -90
Shards.Squash = NumberSequence.new({NumberSequenceKeypoint.new(0, 1), NumberSequenceKeypoint.new(0.5705521, 0.4125001), NumberSequenceKeypoint.new(1, -0.9375)})
Shards.Speed = NumberRange.new(97.7530136, 146.9970093)
Shards.Brightness = 4
Shards.Size = NumberSequence.new({NumberSequenceKeypoint.new(0, 0), NumberSequenceKeypoint.new(0.284774, 1.2389833, 0.1534118), NumberSequenceKeypoint.new(1, 0)})
Shards.Enabled = false
Shards.Acceleration = Vector3.new(0, -56.961341857910156, 0)
Shards.ZOffset = 0.5705321
Shards.Rate = 50
Shards.Texture = "rbxassetid://8030734851"
Shards.Rotation = NumberRange.new(90, 90)
Shards.Orientation = Enum.ParticleOrientation.VelocityParallel
Shards.Parent = Attachment

local Crescents = Instance.new("ParticleEmitter")
Crescents.Name = "Crescents"
Crescents.Lifetime = NumberRange.new(0.19, 0.38)
Crescents.SpreadAngle = Vector2.new(-360, 360)
Crescents.Transparency = NumberSequence.new({NumberSequenceKeypoint.new(0, 1), NumberSequenceKeypoint.new(0.1932907, 0), NumberSequenceKeypoint.new(0.778754, 0), NumberSequenceKeypoint.new(1, 1)})
Crescents.LightEmission = 10
Crescents.Color = ColorSequence.new(Color3.fromRGB(160, 96, 255))
Crescents.VelocitySpread = -360
Crescents.Speed = NumberRange.new(0.0826858, 0.0826858)
Crescents.Brightness = 4
Crescents.Size = NumberSequence.new({NumberSequenceKeypoint.new(0, 0), NumberSequenceKeypoint.new(0.398774, 8.8026266, 2.2834616), NumberSequenceKeypoint.new(1, 11.477972, 1.860431)})
Crescents.Enabled = false
Crescents.ZOffset = 0.4542207
Crescents.Rate = 50
Crescents.Texture = "rbxassetid://12509373457"
Crescents.RotSpeed = NumberRange.new(800, 1000)
Crescents.Rotation = NumberRange.new(-360, 360)
Crescents.Orientation = Enum.ParticleOrientation.VelocityPerpendicular
Crescents.Parent = Attachment

local ParticleEmitter2 = Instance.new("ParticleEmitter")
ParticleEmitter2.Name = "ParticleEmitter2"
ParticleEmitter2.FlipbookFramerate = NumberRange.new(20, 20)
ParticleEmitter2.Lifetime = NumberRange.new(0.19, 0.38)
ParticleEmitter2.FlipbookLayout = Enum.ParticleFlipbookLayout.Grid4x4
ParticleEmitter2.SpreadAngle = Vector2.new(360, 360)
ParticleEmitter2.Transparency = NumberSequence.new({NumberSequenceKeypoint.new(0, 1), NumberSequenceKeypoint.new(0.209842, 0.5), NumberSequenceKeypoint.new(0.503842, 0.263333), NumberSequenceKeypoint.new(0.799842, 0.5), NumberSequenceKeypoint.new(1, 1)})
ParticleEmitter2.LightEmission = 1
ParticleEmitter2.Color = ColorSequence.new(Color3.fromRGB(173, 82, 252))
ParticleEmitter2.VelocitySpread = 360
ParticleEmitter2.Speed = NumberRange.new(0.0161231, 0.0161231)
ParticleEmitter2.Size = NumberSequence.new({NumberSequenceKeypoint.new(0, 4.3125), NumberSequenceKeypoint.new(0.3985056, 7.9375), NumberSequenceKeypoint.new(1, 10)})
ParticleEmitter2.Enabled = false
ParticleEmitter2.ZOffset = 0.15
ParticleEmitter2.Rate = 100
ParticleEmitter2.Texture = "http://www.roblox.com/asset/?id=12394566430"
ParticleEmitter2.FlipbookMode = Enum.ParticleFlipbookMode.OneShot
ParticleEmitter2.Rotation = NumberRange.new(39, 999)
ParticleEmitter2.Orientation = Enum.ParticleOrientation.VelocityParallel
ParticleEmitter2.Parent = Attachment

Part.Parent = workspace
end

do --// Coom

local Part = Instance.new("Part")

Part.Parent = ReplicatedStorage

local Attachment = Instance.new("Attachment")
Attachment.Parent = Part

HitEffectModule.Locals.Type["Coom"] = Attachment

local Foam = Instance.new("ParticleEmitter")
Foam.Name = "Foam"
Foam.LightInfluence = 0.5
Foam.Lifetime = NumberRange.new(1, 1)
Foam.SpreadAngle = Vector2.new(360, -360)
Foam.VelocitySpread = 360
Foam.Squash = NumberSequence.new(1)
Foam.Speed = NumberRange.new(20, 20)
Foam.Brightness = 2.5
Foam.Size = NumberSequence.new({NumberSequenceKeypoint.new(0, 0), NumberSequenceKeypoint.new(0.1016692, 0.6508875, 0.6508875), NumberSequenceKeypoint.new(0.6494689, 1.4201183, 0.4127519), NumberSequenceKeypoint.new(1, 0)})
Foam.Enabled = false
Foam.Acceleration = Vector3.new(0, -66.04029846191406, 0)
Foam.Rate = 100
Foam.Texture = "rbxassetid://8297030850"
Foam.Rotation = NumberRange.new(-90, -90)
Foam.Orientation = Enum.ParticleOrientation.VelocityParallel
Foam.Parent = Attachment

Part.Parent = workspace
end

do --// Slash
local Part = Instance.new("Part")
Part.Parent = ReplicatedStorage

local Attachment = Instance.new("Attachment")
Attachment.Parent = Part

HitEffectModule.Locals.Type["Slash"] = Attachment

local Crescents = Instance.new("ParticleEmitter")
Crescents.Name = "Crescents"
Crescents.Lifetime = NumberRange.new(0.19, 0.38)
Crescents.SpreadAngle = Vector2.new(-360, 360)
Crescents.Transparency = NumberSequence.new({NumberSequenceKeypoint.new(0, 1), NumberSequenceKeypoint.new(0.1932907, 0), NumberSequenceKeypoint.new(0.778754, 0), NumberSequenceKeypoint.new(1, 1)})
Crescents.LightEmission = 10
Crescents.Color = ColorSequence.new({ColorSequenceKeypoint.new(0, Color3.fromRGB(160, 96, 255)), ColorSequenceKeypoint.new(0.3160622, Color3.fromRGB(160, 96, 255)), ColorSequenceKeypoint.new(0.5146805, Color3.fromRGB(154, 82, 255)), ColorSequenceKeypoint.new(1, Color3.fromRGB(160, 96, 255))})
Crescents.VelocitySpread = -360
Crescents.Speed = NumberRange.new(0.0826858, 0.0826858)
Crescents.Brightness = 4
Crescents.Size = NumberSequence.new({NumberSequenceKeypoint.new(0, 0), NumberSequenceKeypoint.new(0.398774, 8.8026266, 2.2834616), NumberSequenceKeypoint.new(1, 11.477972, 1.860431)})
Crescents.Enabled = false
Crescents.ZOffset = 0.4542207
Crescents.Rate = 50
Crescents.Texture = "rbxassetid://12509373457"
Crescents.RotSpeed = NumberRange.new(800, 1000)
Crescents.Rotation = NumberRange.new(-360, 360)
Crescents.Orientation = Enum.ParticleOrientation.VelocityPerpendicular
Crescents.Parent = Attachment

Part.Parent = workspace
end

do --// Atomic Slash

local Part = Instance.new("Part")

Part.Parent = ReplicatedStorage

local Attachment = Instance.new("Attachment")
Attachment.Parent = Part

HitEffectModule.Locals.Type["Atomic Slash"] = Attachment

local Crescents = Instance.new("ParticleEmitter")
Crescents.Name = "Crescents"
Crescents.Lifetime = NumberRange.new(0.19, 0.38)
Crescents.SpreadAngle = Vector2.new(-360, 360)
Crescents.Transparency = NumberSequence.new({NumberSequenceKeypoint.new(0, 1), NumberSequenceKeypoint.new(0.1932907, 0), NumberSequenceKeypoint.new(0.778754, 0), NumberSequenceKeypoint.new(1, 1)})
Crescents.LightEmission = 10
Crescents.Color = ColorSequence.new(Color3.fromRGB(160, 96, 255))
Crescents.VelocitySpread = -360
Crescents.Speed = NumberRange.new(0.0826858, 0.0826858)
Crescents.Brightness = 4
Crescents.Size = NumberSequence.new({NumberSequenceKeypoint.new(0, 0), NumberSequenceKeypoint.new(0.398774, 8.8026266, 2.2834616), NumberSequenceKeypoint.new(1, 11.477972, 1.860431)})
Crescents.Enabled = false
Crescents.ZOffset = 0.4542207
Crescents.Rate = 50
Crescents.Texture = "rbxassetid://12509373457"
Crescents.RotSpeed = NumberRange.new(800, 1000)
Crescents.Rotation = NumberRange.new(-360, 360)
Crescents.Orientation = Enum.ParticleOrientation.VelocityPerpendicular
Crescents.Parent = Attachment

local Glow = Instance.new("ParticleEmitter")
Glow.Name = "Glow"
Glow.Lifetime = NumberRange.new(0.16, 0.16)
Glow.Transparency = NumberSequence.new({NumberSequenceKeypoint.new(0, 1), NumberSequenceKeypoint.new(0.1421725, 0.6182796), NumberSequenceKeypoint.new(1, 1)})
Glow.Color = ColorSequence.new(Color3.fromRGB(173, 82, 252))
Glow.Speed = NumberRange.new(0, 0)
Glow.Brightness = 5
Glow.Size = NumberSequence.new(9.1873131, 16.5032349)
Glow.Enabled = false
Glow.ZOffset = -0.0565939
Glow.Rate = 50
Glow.Texture = "rbxassetid://8708637750"
Glow.Parent = Attachment

local Effect = Instance.new("ParticleEmitter")
Effect.Name = "Effect"
Effect.Lifetime = NumberRange.new(0.4, 0.7)
Effect.FlipbookLayout = Enum.ParticleFlipbookLayout.Grid4x4
Effect.SpreadAngle = Vector2.new(360, -360)
Effect.LockedToPart = true
Effect.Transparency = NumberSequence.new({NumberSequenceKeypoint.new(0, 1), NumberSequenceKeypoint.new(0.1070999, 0.19375), NumberSequenceKeypoint.new(0.7761194, 0.88125), NumberSequenceKeypoint.new(1, 1)})
Effect.LightEmission = 1
Effect.Color = ColorSequence.new(Color3.fromRGB(173, 82, 252))
Effect.Drag = 1
Effect.VelocitySpread = 360
Effect.Speed = NumberRange.new(0.0036749, 0.0036749)
Effect.Brightness = 2.0999999
Effect.Size = NumberSequence.new(6.9680691, 9.9213123)
Effect.Enabled = false
Effect.ZOffset = 0.4777403
Effect.Rate = 50
Effect.Texture = "rbxassetid://9484012464"
Effect.RotSpeed = NumberRange.new(-150, -150)
Effect.FlipbookMode = Enum.ParticleFlipbookMode.OneShot
Effect.Rotation = NumberRange.new(50, 50)
Effect.Orientation = Enum.ParticleOrientation.VelocityPerpendicular
Effect.Parent = Attachment

local Gradient1 = Instance.new("ParticleEmitter")
Gradient1.Name = "Gradient1"
Gradient1.Lifetime = NumberRange.new(0.3, 0.3)
Gradient1.Transparency = NumberSequence.new({NumberSequenceKeypoint.new(0, 1), NumberSequenceKeypoint.new(0.15, 0.3), NumberSequenceKeypoint.new(1, 1)})
Gradient1.Color = ColorSequence.new(Color3.fromRGB(173, 82, 252))
Gradient1.Speed = NumberRange.new(0, 0)
Gradient1.Brightness = 6
Gradient1.Size = NumberSequence.new(0, 11.6261358)
Gradient1.Enabled = false
Gradient1.ZOffset = 0.9187313
Gradient1.Rate = 50
Gradient1.Texture = "rbxassetid://8196169974"
Gradient1.Parent = Attachment

local Shards = Instance.new("ParticleEmitter")
Shards.Name = "Shards"
Shards.Lifetime = NumberRange.new(0.19, 0.7)
Shards.SpreadAngle = Vector2.new(-90, 90)
Shards.Color = ColorSequence.new(Color3.fromRGB(179, 145, 253))
Shards.Drag = 10
Shards.VelocitySpread = -90
Shards.Squash = NumberSequence.new({NumberSequenceKeypoint.new(0, 1), NumberSequenceKeypoint.new(0.5705521, 0.4125001), NumberSequenceKeypoint.new(1, -0.9375)})
Shards.Speed = NumberRange.new(97.7530136, 146.9970093)
Shards.Brightness = 4
Shards.Size = NumberSequence.new({NumberSequenceKeypoint.new(0, 0), NumberSequenceKeypoint.new(0.284774, 1.2389833, 0.1534118), NumberSequenceKeypoint.new(1, 0)})
Shards.Enabled = false
Shards.Acceleration = Vector3.new(0, -56.961341857910156, 0)
Shards.ZOffset = 0.5705321
Shards.Rate = 50
Shards.Texture = "rbxassetid://8030734851"
Shards.Rotation = NumberRange.new(90, 90)
Shards.Orientation = Enum.ParticleOrientation.VelocityParallel
Shards.Parent = Attachment

Part.Parent = workspace
end

do --// Aura Burst
    local attachment = Instance.new("Attachment")
    attachment.Name = "Attachment"
    HitEffectModule.Locals.Type["AuraBurst"] = attachment
    

local useparticle2 = Instance.new('ParticleEmitter')
useparticle2.Name = "useparticle2"
useparticle2.Acceleration = Vector3.new(0, 10, 0)
useparticle2.Brightness = 10
useparticle2.Color = ColorSequence.new(Color3.new(0, 1, 0.333333), Color3.new(0, 0, 1))
useparticle2.Drag = 3
useparticle2.Enabled = false
useparticle2.Lifetime = NumberRange.new(0.3, 10)
useparticle2.LightEmission = 1
useparticle2.Rate = 50
useparticle2.RotSpeed = NumberRange.new(-150, 150)
useparticle2.Rotation = NumberRange.new(-360, 360)
useparticle2.Size = NumberSequence.new({
    NumberSequenceKeypoint.new(0, 0),
    NumberSequenceKeypoint.new(0.19467, 0.819203),
    NumberSequenceKeypoint.new(1, 0)
})
useparticle2.Speed = NumberRange.new(4.49742, 34.4802)
useparticle2.SpreadAngle = Vector2.new(360, 360)
useparticle2.Texture = "rbxassetid://16171528032"
useparticle2.Parent = attachment

local useparticle = Instance.new('ParticleEmitter')
useparticle.Name = "useparticle"
useparticle.Acceleration = Vector3.new(0, 10, 0)
useparticle.Brightness = 10
useparticle.Color = ColorSequence.new(Color3.new(0, 1, 0.403922), Color3.new(0.12549, 0, 1))
useparticle.Drag = 3
useparticle.Enabled = false
useparticle.Lifetime = NumberRange.new(0.3, 10)
useparticle.LightEmission = 1
useparticle.Rate = 50
useparticle.RotSpeed = NumberRange.new(-150, 150)
useparticle.Rotation = NumberRange.new(-360, 360)
useparticle.Size = NumberSequence.new({
    NumberSequenceKeypoint.new(0, 0),
    NumberSequenceKeypoint.new(0.19467, 0.819203),
    NumberSequenceKeypoint.new(1, 0)
})
useparticle.Speed = NumberRange.new(4.49742, 34.4802)
useparticle.SpreadAngle = Vector2.new(360, 360)
useparticle.Texture = "rbxassetid://16171528032"
useparticle.Parent = attachment

local circles2 = Instance.new('ParticleEmitter')
circles2.Name = "circles2"
circles2.Acceleration = Vector3.new(0, 0, 0.001)
circles2.Brightness = 10
circles2.Color = ColorSequence.new(Color3.new(0, 1, 0.541176), Color3.new(0.0784314, 0, 1))
circles2.Enabled = false
circles2.Lifetime = NumberRange.new(0.9, 0.9)
circles2.LightInfluence = 0.35
circles2.Orientation = Enum.ParticleOrientation.VelocityPerpendicular
circles2.Rate = 4
circles2.RotSpeed = NumberRange.new(150, 150)
circles2.Size = NumberSequence.new({
    NumberSequenceKeypoint.new(0, 0),
    NumberSequenceKeypoint.new(0.20394, 8.79781),
    NumberSequenceKeypoint.new(1, 10)
})
circles2.Speed = NumberRange.new(0.01, 0.01)
circles2.SpreadAngle = Vector2.new(360, 360)
circles2.Texture = "http://www.roblox.com/asset/?id=6835970470"
circles2.Transparency = NumberSequence.new({
    NumberSequenceKeypoint.new(0, 0),
    NumberSequenceKeypoint.new(0.840125, 0.83125),
    NumberSequenceKeypoint.new(1, 1)
})
circles2.Parent = attachment

local circles = Instance.new('ParticleEmitter')
circles.Name = "circles"
circles.Acceleration = Vector3.new(0, 0, 0.001)
circles.Brightness = 10
circles.Color = ColorSequence.new(Color3.new(0, 1, 0.45098), Color3.new(0.133333, 0, 1))
circles.Enabled = false
circles.Lifetime = NumberRange.new(0.9, 0.9)
circles.LightInfluence = 0.35
circles.Orientation = Enum.ParticleOrientation.VelocityPerpendicular
circles.Rate = 4
circles.RotSpeed = NumberRange.new(150, 150)
circles.Size = NumberSequence.new({
    NumberSequenceKeypoint.new(0, 0),
    NumberSequenceKeypoint.new(0.20394, 8.79781),
    NumberSequenceKeypoint.new(1, 10)
})
circles.Speed = NumberRange.new(0.01, 0.01)
circles.SpreadAngle = Vector2.new(360, 360)
circles.Texture = "http://www.roblox.com/asset/?id=6835970470"
circles.Transparency = NumberSequence.new({
    NumberSequenceKeypoint.new(0, 0),
    NumberSequenceKeypoint.new(0.840125, 0.83125),
    NumberSequenceKeypoint.new(1, 1)
})
circles.Parent = attachment
end

do
local attachment = Instance.new("Attachment")
attachment.Name = "Attachment"
HitEffectModule.Locals.Type["Thunder"] = attachment

local ELECTRIC2 = Instance.new('ParticleEmitter')
ELECTRIC2.Parent = attachment
ELECTRIC2.Name = "ELECTRIC"
ELECTRIC2.Brightness = 3
ELECTRIC2.Color = ColorSequence.new(Color3.new(0, 0.52549, 0.780392), Color3.new(1, 0, 1))
ELECTRIC2.FlipbookLayout = Enum.ParticleFlipbookLayout.Grid8x8
ELECTRIC2.FlipbookMode = Enum.ParticleFlipbookMode.OneShot
ELECTRIC2.Lifetime = NumberRange.new(1, 3)
ELECTRIC2.LightEmission = 1
ELECTRIC2.Orientation = Enum.ParticleOrientation.FacingCameraWorldUp
ELECTRIC2.Rate = 5
ELECTRIC2.Size = NumberSequence.new({
    NumberSequenceKeypoint.new(0, 19),
    NumberSequenceKeypoint.new(1, 0)
})
ELECTRIC2.Speed = NumberRange.new(0, 0)
ELECTRIC2.SpreadAngle = Vector2.new(-360, 360)
ELECTRIC2.Texture = "rbxassetid://10547286472"
ELECTRIC2.Transparency = NumberSequence.new({
    NumberSequenceKeypoint.new(0, 0),
    NumberSequenceKeypoint.new(0.25, 1),
    NumberSequenceKeypoint.new(1, 1)
})

local ParticleEmitter = Instance.new('ParticleEmitter') 
ParticleEmitter.Color = ColorSequence.new(
    Color3.fromRGB(0, 0, 255),
    Color3.fromRGB(0, 0, 255),
    Color3.fromRGB(0, 0, 255),
    Color3.fromRGB(0, 0, 139)
)
ParticleEmitter.Drag = 5
ParticleEmitter.Lifetime = NumberRange.new(0.4, 0.4)
ParticleEmitter.LightEmission = 0.5
ParticleEmitter.Rate = 5
ParticleEmitter.Parent = attachment
ParticleEmitter.RotSpeed = NumberRange.new(200, 250)
ParticleEmitter.Rotation = NumberRange.new(-360, 360)
ParticleEmitter.Size = NumberSequence.new({
    NumberSequenceKeypoint.new(0, 7),
    NumberSequenceKeypoint.new(1, 0)
})
ParticleEmitter.Speed = NumberRange.new(0, 0)
ParticleEmitter.Texture = "http://www.roblox.com/asset/?id=467188845"
ParticleEmitter.Transparency = NumberSequence.new(0, 0.43125, 0, 0.299656, 0.04375, 0, 0.874618, 0, 0, 1, 0, 0)
ParticleEmitter.ZOffset = 1
end

do
    local part = Instance.new("Part")
    part.Parent = ReplicatedStorage
    local attachment = Instance.new("Attachment")
    attachment.Name = "Attachment"
    attachment.Parent = part
    HitEffectModule.Locals.Type["Nova"] = attachment

    local function createParticleEmitter(acceleration)
        local emitter = Instance.new("ParticleEmitter")
        emitter.Name = "ParticleEmitter"
        emitter.Acceleration = acceleration
        emitter.Color = ColorSequence.new({
            ColorSequenceKeypoint.new(0, Color3.fromRGB(0, 0, 0)),
            ColorSequenceKeypoint.new(0.495, HitEffectModule.Settings.HitEffect.Color),
            ColorSequenceKeypoint.new(1, Color3.fromRGB(0, 0, 0))
        })
        emitter.Lifetime = NumberRange.new(0.5, 0.5)
        emitter.LightEmission = 1
        emitter.LockedToPart = true
        emitter.Rate = 1
        emitter.Rotation = NumberRange.new(0, 360)
        emitter.Size = NumberSequence.new({
            NumberSequenceKeypoint.new(0, 1),
            NumberSequenceKeypoint.new(1, 10),
            NumberSequenceKeypoint.new(1, 1)
        })
        emitter.Speed = NumberRange.new(0, 0)
        emitter.Texture = "rbxassetid://1084991215"
        emitter.Transparency = NumberSequence.new({
            NumberSequenceKeypoint.new(0, 0),
            NumberSequenceKeypoint.new(0, 0.1),
            NumberSequenceKeypoint.new(0.534, 0.25),
            NumberSequenceKeypoint.new(1, 0.5),
            NumberSequenceKeypoint.new(1, 0)
        })
        emitter.ZOffset = 1
        emitter.Parent = attachment
        return emitter
    end

    createParticleEmitter(Vector3.new(0, 0, 1))
    local perpendicularEmitter = createParticleEmitter(Vector3.new(0, 1, -0.001))
    perpendicularEmitter.Orientation = Enum.ParticleOrientation.VelocityPerpendicular
end

HitEffectModule.Functions.Effect = function(character, color)
    if not character then return end
    local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
    if not humanoidRootPart then return end

    local effectAttachment = HitEffectModule.Locals.Type[hit.HitEffectType]:Clone()
    effectAttachment.Parent = humanoidRootPart

    for _, emitter in pairs(effectAttachment:GetChildren()) do
        if emitter:IsA("ParticleEmitter") then
            emitter.Color = ColorSequence.new({
                ColorSequenceKeypoint.new(0, Color3.fromRGB(0, 0, 0)),
                ColorSequenceKeypoint.new(0.495, hit.HitEffectColor),
                ColorSequenceKeypoint.new(1, hit.HitEffectColor)
            })
            
            if getgenv().hiteffects then
                emitter:Emit()
            end
        end
    end

    task.delay(hit.Duration, function()
        effectAttachment:Destroy()
    end)
end

getgenv().hit = {
    detection = true,
    logs = true,
    notify_duration = 1,
    sound_enabled = true,
    sound_id = "Neverlose",
    sound_volume = 1
}

local HitSoundId = {
    Bameware = "rbxassetid://3124331820",
    Neverlose = "rbxassetid://6534948092",
    Bell = "rbxassetid://6534947240",
    Bubble = "rbxassetid://6534947588",
    Pick = "rbxassetid://1347140027",
    Pop = "rbxassetid://198598793",
    Rust = "rbxassetid://1255040462",
    Sans = "rbxassetid://3188795283",
    Fart = "rbxassetid://130833677",
    Big = "rbxassetid://5332005053",
    Vine = "rbxassetid://5332680810",
    Bruh = "rbxassetid://4578740568",
    Skeet = "rbxassetid://5633695679",
    Fatality = "rbxassetid://6534947869",
    Bonk = "rbxassetid://5766898159",
    Minecraft = "rbxassetid://4018616850"
}

local hitSoundsNames = {"Bameware", "Neverlose", "Bubble", "Pick", "Pop", "Rust", "Sans", "Fart", "Big", "Vine", "Bruh", "Skeet", "Fatality", "Bonk","Minecraft"}

local last_health = {}

local hit = getgenv().hit

RunService.PostSimulation:Connect(function()
    local x06y = getgenv().x06y
    if not x06y then return end

    local target = x06y.Targetaim and x06y.Targetaim.target or x06y.Camlock and x06y.Camlock.target
    local humanoid = target and target.Character and target.Character:FindFirstChild("Humanoid")

    if target and humanoid and hit.detection then
        local current_health = humanoid.Health

        if not last_health[target.UserId] then
            last_health[target.UserId] = current_health
        end

        if current_health < last_health[target.UserId] then
            if hit.sound_enabled and HitSoundId[hit.sound_id] then
                local sound = Instance.new("Sound")
                sound.SoundId = HitSoundId[hit.sound_id]
                sound.Volume = hit.sound_volume
                sound.Parent = workspace
                sound:Play()
                game:GetService("Debris"):AddItem(sound, 2)
            end
            
            if getgenv().hiteffects.Enabled then
                 HitEffectModule.Functions.Effect(target.Character, getgenv().hiteffects.HitEffectColor)
             end


            if hit.logs and Notifier then
                Notifier.new({Title = "Slik", Content = "Hit: " .. target.DisplayName .. " | Remaining Health: " .. math.floor(current_health), Duration = getgenv().hit.sound_volume, Icon = "rbxassetid://113498561603079"});
            end
        end

        last_health[target.UserId] = current_health
    end
end)

getgenv().HitChams = {
    enabled = false,
    color = Color3.fromRGB(255, 255, 255),
    transparency = 0.7,
    material = Enum.Material.Neon,
    duration = 1
}

local RunService = game:GetService("RunService")
local last_health = {}

local R15_LIMBS = {
    "Head",
    "UpperTorso", "LowerTorso", "HumanoidRootPart",
    "LeftUpperArm", "LeftLowerArm", "LeftHand",
    "RightUpperArm", "RightLowerArm", "RightHand",
    "LeftUpperLeg", "LeftLowerLeg", "LeftFoot",
    "RightUpperLeg", "RightLowerLeg", "RightFoot"
}

local function createHitCham(character)
    if not character then return end

    local chamParts = {}
    for _, name in ipairs(R15_LIMBS) do
        local limb = character:FindFirstChild(name)
        if limb and limb:IsA("BasePart") then
            local indicator = Instance.new("Part")
            indicator.Anchored = true
            indicator.CanCollide = false
            indicator.Size = limb.Size + Vector3.new(0.08, 0.08, 0.08) -- slight padding
            indicator.CFrame = limb.CFrame
            indicator.Color = getgenv().HitChams.color
            indicator.Transparency = getgenv().HitChams.transparency
            indicator.Material = getgenv().HitChams.material
            indicator.Parent = workspace
            chamParts[#chamParts + 1] = indicator
        end
    end

    task.delay(getgenv().HitChams.duration, function()
        for _, p in ipairs(chamParts) do
            if p and p.Parent then p:Destroy() end
        end
    end)
end


RunService.PostSimulation:Connect(function()
    local x06y = getgenv().x06y
    if not x06y or not getgenv().HitChams.enabled then return end

    local target = x06y.Targetaim and x06y.Targetaim.target or x06y.Camlock  and x06y.Camlock.target
    local humanoid = target and target.Character and target.Character:FindFirstChild("Humanoid")

    if target and humanoid and getgenv().HitChams.enabled then
        local current_health = humanoid.Health
        last_health[target.UserId] = last_health[target.UserId] or current_health

        if current_health < last_health[target.UserId] then
            local char = target.Character
            if char then
                local hitPart = char:FindFirstChild(x06y.Targetaim.hitpart or "HumanoidRootPart")
                if hitPart then
                    createHitCham(char) 
                end
            end
        end

        last_health[target.UserId] = current_health
    end
end)

getgenv().orbit = {
	enabled = false,
	type = "none", -- "none", "gun", "melee"
	distance = 10,
	height = 0,
	speed = 800,
	angle = 0
}

local gunList = {
	["rev"] = true,
	["usp"] = true,
	["katana"] = true,
	["[Revolver]"] = true,
	["[Rifle]"] = true,
	["[Knife]"] = true,
	["[LMG]"] = true,
	["[P90]"] = true
}

game:GetService("RunService").Heartbeat:Connect(function(dt)
	if not getgenv().orbit.enabled then return end

	local lp = game.Players.LocalPlayer
	if not lp.Character or not lp.Character:FindFirstChild("HumanoidRootPart") then return end

	local target = getgenv().x06y and getgenv().x06y.Camlock and getgenv().x06y.Camlock.target or getgenv().x06y.Targetaim.target
	if not target or not target.Character or not target.Character:FindFirstChild("HumanoidRootPart") then return end

	local orbitType = getgenv().orbit.type
	if orbitType == "gun" then
		local tool = lp.Character:FindFirstChildOfClass("Tool")
		if not tool or not gunList[tool.Name] then
			for _, v in ipairs(lp.Backpack:GetChildren()) do
				if gunList[v.Name] then
					v.Parent = lp.Character -- auto equip
					break
				end
			end
		end
	elseif orbitType == "melee" then
		local tool = lp.Character:FindFirstChildOfClass("Tool")
		if not tool or (tool.Name ~= "katana" and tool.Name ~= "[Knife]") then
			for _, v in ipairs(lp.Backpack:GetChildren()) do
				if v.Name == "katana" or v.Name == "[Knife]" then
					v.Parent = lp.Character -- auto equip
					break
				end
			end
		end
	end

	getgenv().orbit.angle += dt * getgenv().orbit.speed
	local angleRad = math.rad(getgenv().orbit.angle)

	local root = lp.Character.HumanoidRootPart
	local targetRoot = target.Character.HumanoidRootPart

	local offset = Vector3.new(
		math.cos(angleRad) * getgenv().orbit.distance,
		getgenv().orbit.height,
		math.sin(angleRad) * getgenv().orbit.distance
	)

	local orbitPosition = targetRoot.Position + offset
	root.CFrame = CFrame.new(orbitPosition, targetRoot.Position)
end)

getgenv().cframe = getgenv().cframe or {}
local cframe = getgenv().cframe

cframe.settings = {
    enabled = false,
    showbutton = false,
    speed = 1
}

local TweenService = game:GetService("TweenService")
local CoreGui = game:GetService("CoreGui")
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local PlayerGui = LocalPlayer:WaitForChild("PlayerGui")
local RunService = game:GetService("RunService")
local Camera = workspace.CurrentCamera
local UserInputService = game:GetService("UserInputService")

local ScreenGui, Button

local function CreateCFrameButton()
    if not cframe.settings.showbutton then return end
    if ScreenGui then ScreenGui:Destroy() end
    
    ScreenGui = Instance.new("ScreenGui")
    ScreenGui.Name = "SpeedCFrameGUI"
    ScreenGui.ResetOnSpawn = false
    ScreenGui.Parent = CoreGui

    Button = Instance.new("TextButton")
    Button.Name = "SpeedCFrameButton"
    Button.Size = UDim2.new(0, 75, 0, 50)
    Button.Position = UDim2.new(0.5, -95, 0.5, -35)
    Button.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
    Button.BackgroundTransparency = 0.4
    Button.Text = "TP Walk"
    Button.TextColor3 = Color3.fromRGB(255, 255, 255)
    Button.Font = Enum.Font.Code
    Button.TextScaled = true
    Button.TextWrapped = true
    Button.Parent = ScreenGui
    
    local Outline = Instance.new("UIStroke")
    Outline.Color = Color3.fromRGB(255, 255, 255)
    Outline.Thickness = 2
    Outline.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
    Outline.Parent = Button
    
    local Gradient = Instance.new("UIGradient")
    Gradient.Color = ColorSequence.new({
        ColorSequenceKeypoint.new(0, Color3.fromRGB(255, 255, 255)), 
        ColorSequenceKeypoint.new(1, Color3.fromRGB(170, 170, 170))  
    })
    Gradient.Rotation = 45
    Gradient.Parent = Outline

    local UICorner = Instance.new("UICorner")
    UICorner.CornerRadius = UDim.new(0, 10)
    UICorner.Parent = Button

    Button.MouseButton1Click:Connect(function()
        cframe.settings.enabled = not cframe.settings.enabled
        if cframe.settings.enabled then
            Button.TextColor3 = Color3.fromRGB(0, 255, 0)
        end
        if not cframe.settings.enabled then
            Button.TextColor3 = Color3.fromRGB(255, 255, 255)
        end
    end)

    local dragging = false
    local startPos, startMousePos

    Button.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = true
            startPos = Button.Position
            startMousePos = input.Position
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end)

    Button.InputChanged:Connect(function(input)
        if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
            local delta = input.Position - startMousePos
            Button.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
        end
    end)
end

local function DestroyCFrameButton()
    if ScreenGui then
        ScreenGui:Destroy()
        ScreenGui = nil
        Button = nil
    end
end

RunService.Heartbeat:Connect(function()
    if cframe.settings.enabled and LocalPlayer.Character then
        local root = LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
        local humanoid = LocalPlayer.Character:FindFirstChild("Humanoid")
        if root and humanoid then
            local move_dir = humanoid.MoveDirection
            root.CFrame = root.CFrame + (move_dir * cframe.settings.speed)
        end
    end
end)

getgenv().AutoReloadEnabled = false

local function autoReload()
    while getgenv().AutoReloadEnabled do
        task.wait(0.1)

        local character = game.Players.LocalPlayer.Character
        if character then
            local tool = character:FindFirstChildWhichIsA("Tool")
            if tool then
                local ammo = tool:FindFirstChild("AMMO")
                local reloadEvent = tool:FindFirstChildWhichIsA("RemoteEvent")
                
                if ammo and reloadEvent and ammo.Value == 0 then
                    reloadEvent:FireServer()
                    task.wait(1)
                end
            end
        end
    end
end

getgenv().ESPsc = {
    Enabled = false,
    Target = false,

    Box = {
        Enabled = true,
        Color = Color3.fromRGB(255,255,255),
    },

    Healthbar = {
        Enabled = true,
        Color = Color3.fromRGB(0,255,0),
    },

    Name = {
        Enabled = true,
        Color = Color3.fromRGB(255,255,255),
    },
    
    Tools = {
        Enabled = true,
        Color = Color3.fromRGB(255,255,255)
    },

    Distance = {
        Enabled = true,
        Color = Color3.fromRGB(255,255,255),
    },
    
    Skeleton = {
        Enabled = true,
        Color = Color3.fromRGB(255,255,255)
    },

    Tracer = {
        Unlock_Tracer = false,
        Color = Color3.fromRGB(255,255,255),
    },
}

local Players = game:GetService("Players")
local Camera = game:GetService("Workspace").CurrentCamera
local LocalPlayer = Players.LocalPlayer
local RunService = game:GetService("RunService")

local R15_BONES = {
    {"Head", "UpperTorso"},
    {"UpperTorso", "LowerTorso"},
    {"LowerTorso", "HumanoidRootPart"},

    {"UpperTorso", "LeftUpperArm"},
    {"LeftUpperArm", "LeftLowerArm"},
    {"LeftLowerArm", "LeftHand"},

    {"UpperTorso", "RightUpperArm"},
    {"RightUpperArm", "RightLowerArm"},
    {"RightLowerArm", "RightHand"},

    {"LowerTorso", "LeftUpperLeg"},
    {"LeftUpperLeg", "LeftLowerLeg"},
    {"LeftLowerLeg", "LeftFoot"},

    {"LowerTorso", "RightUpperLeg"},
    {"RightUpperLeg", "RightLowerLeg"},
    {"RightLowerLeg", "RightFoot"},
}

local function isTarget(player)
    if not getgenv().ESPsc.Target then return true end

    local camlockTarget = (getgenv().x06y and getgenv().x06y.Camlock and getgenv().x06y.Camlock.target)
    local targetaimTarget = (getgenv().x06y and getgenv().x06y.Targetaim and getgenv().x06y.Targetaim.target)

    return player == camlockTarget or player == targetaimTarget
end

local SKEL = {}         

local function createESP(player)
    local box = Drawing.new("Square")
    box.Visible = false
    box.Thickness = 1.2
    box.Filled = false

    local healthBar = Drawing.new("Square")
    healthBar.Visible = false
    healthBar.Thickness = 1.5
    healthBar.Filled = true

    local nameText = Drawing.new("Text")
    nameText.Visible = false
    nameText.Size = 14
    nameText.Center = true
    nameText.Outline = true
    
    local toolText = Drawing.new("Text")
    toolText.Visible = false
    toolText.Size   = 13
    toolText.Center = true
    toolText.Outline= true

    local distanceText = Drawing.new("Text")
    distanceText.Visible = false
    distanceText.Size = 13
    distanceText.Center = true
    distanceText.Outline = true
    
    local hpText = Drawing.new("Text")
    hpText.Visible = false
    hpText.Size  = 13
    hpText.Center = false
    hpText.Outline = true
    hpText.Color = Color3.fromRGB(255,255,255)

    local tracer = Drawing.new("Line")
    tracer.Visible = false
    tracer.Thickness = 1
    
    SKEL[player] = SKEL[player] or {}
    local skel = SKEL[player]
    if #skel == 0 then
        for i = 1, 15 do
            local l = Drawing.new("Line")
            l.Thickness = 1.2
            l.Visible   = false
            skel[i] = l
        end
    end

    RunService.RenderStepped:Connect(function()
    if getgenv().ESPsc.Enabled 
    and player.Character 
    and player.Character:FindFirstChild("HumanoidRootPart") 
    and player.Character:FindFirstChildOfClass("Humanoid")
    and LocalPlayer.Character
    and LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
    and isTarget(player) then

        local rootPart = player.Character.HumanoidRootPart
        local humanoid = player.Character:FindFirstChildOfClass("Humanoid")
        local screenPos, onScreen = Camera:WorldToViewportPoint(rootPart.Position)

        if onScreen then
            local distance   = (rootPart.Position - Camera.CFrame.Position).Magnitude
            local boxHeight  = math.clamp(3000 / distance, 40, 300)
            local boxWidth   = boxHeight / 2
            local boxTopLeft = Vector2.new(screenPos.X - boxWidth/2, screenPos.Y - boxHeight/2)

            box.Visible = getgenv().ESPsc.Box.Enabled and isTarget(player)
            if box.Visible then
                box.Size     = Vector2.new(boxWidth, boxHeight)
                box.Position = boxTopLeft
                box.Color    = getgenv().ESPsc.Box.Color
            end

            if getgenv().ESPsc.Healthbar.Enabled and isTarget(player) then
                local hpPercent = math.clamp(humanoid.Health / humanoid.MaxHealth, 0, 1)
                local hpHeight = boxHeight * hpPercent
                healthBar.Size     = Vector2.new(2, hpHeight)
                healthBar.Position = Vector2.new(boxTopLeft.X - 4, boxTopLeft.Y + (boxHeight - hpHeight))
                healthBar.Color    = getgenv().ESPsc.Healthbar.Color
                healthBar.Visible  = true
            else
                healthBar.Visible = false
            end
                 
            local showHp = getgenv().ESPsc.Healthbar.Enabled and isTarget(player)
            if showHp then
                local hp = humanoid.Health
                hpText.Visible = true
                hpText.Text  = tostring(math.floor(hp))

                local percent = hp / humanoid.MaxHealth
                if percent > 0.8 then
                    hpText.Color = Color3.fromRGB(0, 255, 0)      
                elseif percent > 0.6 then
                    hpText.Color = Color3.fromRGB(255, 165, 0)    
                else
                    hpText.Color = Color3.fromRGB(255, 0, 0)      
                end

            hpText.Position = Vector2.new(healthBar.Position.X - 18, healthBar.Position.Y - hpText.TextBounds.Y - 2)
        else
            hpText.Visible = false
        end

            if getgenv().ESPsc.Name.Enabled and isTarget(player) then
                nameText.Text     = player.DisplayName
                nameText.Position = Vector2.new(screenPos.X, boxTopLeft.Y - 16)
                nameText.Color    = getgenv().ESPsc.Name.Color
                nameText.Visible  = true
            else
                nameText.Visible  = false
            end
            
            local function getToolName(character)
                return character and character:FindFirstChildOfClass("Tool") and
                   character:FindFirstChildOfClass("Tool").Name or "None"
            end
            
            if getgenv().ESPsc.Tools.Enabled and isTarget(player) then
                toolText.Text     = getToolName(player.Character)
                toolText.Position = Vector2.new(screenPos.X, boxTopLeft.Y + boxHeight + 2)
                toolText.Color    = getgenv().ESPsc.Tools.Color
                toolText.Visible  = true
             else
                toolText.Visible  = false
             end
             
             local master  = getgenv().ESPsc.Enabled
             local ownTog  = getgenv().ESPsc.Skeleton and getgenv().ESPsc.Skeleton.Enabled
             local targetF = isTarget(player)

             if master and ownTog and targetF and player.Character then
                 if not SKEL[player] then
                     SKEL[player] = {}
                     for i, _ in ipairs(R15_BONES) do
                         local line = Drawing.new("Line")
                         line.Thickness = 1.5
                         line.Color = getgenv().ESPsc.Skeleton.Color
                         line.Visible = false
                         SKEL[player][i] = line
                     end
                 end

                 local skel = SKEL[player]
                 for i, pair in ipairs(R15_BONES) do
                     local a, b = player.Character:FindFirstChild(pair[1]), player.Character:FindFirstChild(pair[2])
                     local line = skel[i]
                     if a and b and line then
                         local posA, onA = Camera:WorldToViewportPoint(a.Position)
                         local posB, onB = Camera:WorldToViewportPoint(b.Position)
                         if onA and onB then
                             line.From    = Vector2.new(posA.X, posA.Y)
                             line.To      = Vector2.new(posB.X, posB.Y)
                             line.Color   = getgenv().ESPsc.Skeleton.Color
                             line.Visible = true
                         else
                             line.Visible = false
                         end
                     elseif line then
                         line.Visible = false
                     end
                 end
             else
                 local skel = SKEL[player]
                 if skel then
                     for _, line in ipairs(skel) do
                         if line then
                             line.Visible = false
                         end
                     end
                 end
             end

             Players.PlayerRemoving:Connect(function(p)
                 if SKEL[p] then
                     for _, line in ipairs(SKEL[p]) do
                         if line then
                             line:Remove()
                         end
                     end
                     SKEL[p] = nil
                 end
             end)

            if getgenv().ESPsc.Distance.Enabled and isTarget(player) then
                distanceText.Text     = string.format("[%dm]", distance)
                distanceText.Position = Vector2.new(screenPos.X, boxTopLeft.Y + boxHeight + 17)
                distanceText.Color    = getgenv().ESPsc.Distance.Color
                distanceText.Visible  = true
            else
                distanceText.Visible  = false
            end
        else
            box.Visible        = false
            healthBar.Visible  = false
            hpText.Visible = false
            toolText.Visible = false
            nameText.Visible   = false
            distanceText.Visible = false
        end
    else
        box.Visible        = false
        healthBar.Visible  = false
        hpText.Visible = false
        toolText.Visible = false
        nameText.Visible   = false
        distanceText.Visible = false
    end    
    
    local showTracer = getgenv().ESPsc.Enabled
        and getgenv().ESPsc.Tracer.Unlock_Tracer
        and player.Character
        and player.Character:FindFirstChild("HumanoidRootPart")

    if showTracer then
        local rootPart = player.Character.HumanoidRootPart
        local screenPos, onScreen = Camera:WorldToViewportPoint(rootPart.Position)

        if onScreen and isTarget(player) then
            tracer.From    = Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y)
            tracer.To      = Vector2.new(screenPos.X, screenPos.Y)
            tracer.Color   = getgenv().ESPsc.Tracer.Color
            tracer.Visible = true
        else
            tracer.Visible = false
        end
    else
        tracer.Visible = false
    end
end)
end

RunService.RenderStepped:Connect(function()
    local master     = getgenv().ESPsc.Enabled
    local skelOn     = getgenv().ESPsc.Skeleton and getgenv().ESPsc.Skeleton.Enabled
    local targetOnly = getgenv().ESPsc.Target

    if not master or not skelOn then
        for _, lines in pairs(SKEL) do
            for i = 1, #R15_BONES do
                local line = lines[i]
                if line then line.Visible = false end
            end
        end
        return
    end

    if targetOnly then
        local locking = (getgenv().x06y and
                        ((getgenv().x06y.Camlock   and getgenv().x06y.Camlock.target) or
                         (getgenv().x06y.Targetaim and getgenv().x06y.Targetaim.target)))
        if not locking then
            for _, lines in pairs(SKEL) do
                for i = 1, #R15_BONES do
                    local line = lines[i]
                    if line then line.Visible = false end
                end
            end
            return
        end
    end

    for player, lines in pairs(SKEL) do
        local character = player.Character
        if not character then
            for i = 1, #R15_BONES do
                local line = lines[i]
                if line then line.Visible = false end
            end
        else
            local show = true
            if targetOnly then
                local camlockT   = getgenv().x06y.Camlock   and getgenv().x06y.Camlock.target
                local targetaimT = getgenv().x06y.Targetaim and getgenv().x06y.Targetaim.target
                show = (player == camlockT or player == targetaimT)
            end

            if show then
                for i, pair in ipairs(R15_BONES) do
                    local a = character:FindFirstChild(pair[1])
                    local b = character:FindFirstChild(pair[2])
                    local line = lines[i]

                    if line and a and b then
                        local posA, onA = Camera:WorldToViewportPoint(a.Position)
                        local posB, onB = Camera:WorldToViewportPoint(b.Position)
                        if onA and onB then
                            line.From    = Vector2.new(posA.X, posA.Y)
                            line.To      = Vector2.new(posB.X, posB.Y)
                            line.Color   = getgenv().ESPsc.Skeleton.Color
                            line.Visible = true
                        else
                            line.Visible = false
                        end
                    elseif line then
                        line.Visible = false
                    end
                end
            else
                for i = 1, #R15_BONES do
                    local line = lines[i]
                    if line then line.Visible = false end
                end
            end
        end
    end
end)

for _, player in pairs(Players:GetPlayers()) do
    if player ~= LocalPlayer then
        createESP(player)
    end
end

Players.PlayerAdded:Connect(function(player)
    if player ~= LocalPlayer then
        createESP(player)
    end
end)

getgenv().Visualize = {
    Enabled = false,
    Highlight = {
        Enabled = true,
        Fill = Color3.fromRGB(47, 40, 40),
        Outline = Color3.fromRGB(255, 255, 255),
    },
    Dot = {
        Enabled = true,
        Color = Color3.fromRGB(255, 255, 255),
        Size = 8,
    }
}

local RunService = game:GetService("RunService")
local highlight, billboard, frame
local swapped = false

local function createHighlight(targetModel)
    if highlight then highlight:Destroy() end
    highlight = Instance.new("Highlight")
    highlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
    highlight.FillTransparency = 0.5
    highlight.Parent = targetModel
end

local function createDot(hrp)
    if billboard then billboard:Destroy() end

    billboard = Instance.new("BillboardGui")
    billboard.Name = "x06ydot"
    billboard.Size = UDim2.new(0, getgenv().Visualize.Dot.Size, 0, getgenv().Visualize.Dot.Size)
    billboard.AlwaysOnTop = true
    billboard.Adornee = hrp
    billboard.Parent = hrp

    frame = Instance.new("Frame")
    frame.Size = UDim2.new(1, 0, 1, 0)
    frame.Position = UDim2.new(0.5, 0, 0.5, 0)
    frame.AnchorPoint = Vector2.new(0.5, 0.5)
    frame.BackgroundColor3 = getgenv().Visualize.Dot.Color
    frame.BorderSizePixel = 0
    frame.Parent = billboard

    local uicorner = Instance.new("UICorner")
    uicorner.CornerRadius = UDim.new(1, 0)
    uicorner.Parent = frame
end

RunService.Heartbeat:Connect(function()
    if not getgenv().Visualize.Enabled then
        if highlight then highlight:Destroy(); highlight = nil end
        if billboard then billboard:Destroy(); billboard = nil end
        return
    end

    local target = getgenv().x06y.Camlock.target or getgenv().x06y.Targetaim.target
    local character = target and target.Character
    local hrp = character and character:FindFirstChild(getgenv().x06y.Targetaim.hitpart)

    if character and hrp then
        if getgenv().Visualize.Highlight.Enabled then
        if not highlight or highlight.Parent ~= target.Character then
            if highlight then highlight:Destroy() end
            createHighlight(target.Character)
        end

        if getgenv().Visualize.Animate and tick() - lastSwitch >= getgenv().Visualize.SwitchDelay then
            lastSwitch = tick()
            swapped = not swapped
            if swapped then
                local tmp = getgenv().Visualize.Highlight.Fill
                getgenv().Visualize.Highlight.Fill = getgenv().Visualize.Highlight.Outline
                getgenv().Visualize.Highlight.Outline = tmp
            end
        end

        highlight.FillColor = getgenv().Visualize.Highlight.Fill
        highlight.OutlineColor = getgenv().Visualize.Highlight.Outline
    else
        if highlight then highlight:Destroy(); highlight = nil end
    end

        if getgenv().Visualize.Dot.Enabled then
            if not billboard or billboard.Adornee ~= hrp then
                createDot(hrp)
            elseif frame then
                frame.BackgroundColor3 = getgenv().Visualize.Dot.Color
                billboard.Size = UDim2.new(0, getgenv().Visualize.Dot.Size, 0, getgenv().Visualize.Dot.Size)
            end
        else
            if billboard then billboard:Destroy(); billboard = nil end
        end
    else
        if highlight then highlight:Destroy(); highlight = nil end
        if billboard then billboard:Destroy(); billboard = nil end
    end
end)

getgenv().exlareCircle = getgenv().exlareCircle or {
    enabled = false,
    color   = Color3.fromRGB(255, 255, 255),
    radius  = 100,
    circle  = nil, 
    filled  = false 
}

local camera = workspace.CurrentCamera

if not getgenv().exlareCircle.circle then
    getgenv().exlareCircle.circle = Drawing.new("Circle")
    getgenv().exlareCircle.circle.Thickness = 1
    getgenv().exlareCircle.circle.Filled = false
end

local fillCircle = nil

game:GetService("RunService").RenderStepped:Connect(function()
    local cfg = getgenv().exlareCircle

    cfg.circle.Visible  = cfg.enabled
    cfg.circle.Color    = cfg.color
    cfg.circle.Radius   = cfg.radius
    cfg.circle.Position = Vector2.new(
        workspace.CurrentCamera.ViewportSize.X / 2,
        workspace.CurrentCamera.ViewportSize.Y / 2
    )

    if cfg.filled then
        if not fillCircle then
            fillCircle = Drawing.new("Circle")
            fillCircle.Thickness = 1
            fillCircle.Filled = true
        end
        fillCircle.Visible  = cfg.enabled
        fillCircle.Color    = cfg.color
        fillCircle.Radius   = cfg.radius
        fillCircle.Position = cfg.circle.Position
    elseif fillCircle then
        fillCircle:Remove()
        fillCircle = nil
    end
end)

getgenv().crosshair = {
    enabled = false,
    refreshrate = 0,
    mode = "center", -- mouse, target
    position = Vector2.new(0, 0),
    width = 1.5,
    length = 10,
    radius = 10,
    color = Color3.fromRGB(255, 255, 255),
    spin = true,
    spin_speed = 120,
    spin_max = 200,
    spin_style = Enum.EasingStyle.Circular,
    resize = true,
    resize_speed = 150,
    resize_min = 5,
    resize_max = 22
}

local camera = workspace.CurrentCamera
local tweenservice = game:GetService("TweenService")
local inputservice = game:GetService("UserInputService")
local crosshair = getgenv().crosshair

local old
old =
    hookfunction(
    Drawing.new,
    function(class, properties)
        local drawing = old(class)
        for i, v in next, properties or {} do
            drawing[i] = v
        end
        return drawing
    end
)

local function solve(angle, radius)
    return Vector2.new(math.sin(math.rad(angle)) * radius, math.cos(math.rad(angle)) * radius)
end

local last_render = 0
local drawings = {
    crosshair = {},
    text = {
        Drawing.new("Text", {Size = 13, Font = 2, Outline = true, Text = "Slik ", Color = Color3.new(1, 1, 1)}),
        Drawing.new("Text", {Size = 13, Font = 2, Outline = true, Text = "Ware", Color = Color3.new(0, 0, 0)})
    }
}

for idx = 1, 4 do
    drawings.crosshair[idx] = Drawing.new("Line")
    drawings.crosshair[idx + 4] = Drawing.new("Line")
end

game:GetService("RunService").RenderStepped:Connect(function()
        local _tick = tick()

        if _tick - last_render > crosshair.refreshrate then
            last_render = _tick

            local position =
                (crosshair.mode == "center" and camera.ViewportSize / 2 or
                crosshair.mode == "mouse" and inputservice:GetMouseLocation() or
                crosshair.position)         

            local text_1 = drawings.text[1]
            local text_2 = drawings.text[2]

            text_1.Visible = crosshair.enabled
            text_2.Visible = crosshair.enabled

            if crosshair.enabled then
                local text_x = text_1.TextBounds.X + text_2.TextBounds.X

                text_1.Position =
                    position +
                    Vector2.new(
                        -text_x / 2,
                        crosshair.radius + (crosshair.resize and crosshair.resize_max or crosshair.length) + 15
                    )
                text_2.Position = text_1.Position + Vector2.new(text_1.TextBounds.X)
                text_2.Color = crosshair.color

                for idx = 1, 4 do
                    local outline = drawings.crosshair[idx]
                    local inline = drawings.crosshair[idx + 4]

                    local angle = (idx - 1) * 90
                    local length = crosshair.length

                    if crosshair.spin then
                        local spin_angle = -_tick * crosshair.spin_speed % crosshair.spin_max
                        angle =
                            angle +
                            tweenservice:GetValue(spin_angle / 360, crosshair.spin_style, Enum.EasingDirection.InOut) *
                                360
                    end

                    if crosshair.resize then
                        local resize_length = tick() * crosshair.resize_speed % 180
                        length = crosshair.resize_min + math.sin(math.rad(resize_length)) * crosshair.resize_max
                    end

                    inline.Visible = true
                    inline.Color = crosshair.color
                    inline.From = position + solve(angle, crosshair.radius)
                    inline.To = position + solve(angle, crosshair.radius + length)
                    inline.Thickness = crosshair.width

                    outline.Visible = true
                    outline.From = position + solve(angle, crosshair.radius - 1)
                    outline.To = position + solve(angle, crosshair.radius + length + 1)
                    outline.Thickness = crosshair.width + 1.5
                end
            else
                for idx = 1, 4 do
                    drawings.crosshair[idx].Visible = false
                    drawings.crosshair[idx + 4].Visible = false
                end
            end
        end
    end
)

local target = main:DrawSection({Name = "Targetaim", Position = "left"})
local cam = main:DrawSection({Name = "Camlock", Position = "right"})
local sound = hits:DrawSection({Name = "Hit Sounds", Position = "left"})
local effects = hits:DrawSection({Name = "Hit Effects", Position = "right"})
local chamz = hits:DrawSection({Name = "Hit Chams", Position = "left"})
local csync = rage:DrawSection({Name = "CSync", Position = "left"})
local cframe = rage:DrawSection({Name = "CFrame", Position = "right"})
local gun = rage:DrawSection({Name = "Gun", Position = "right"})
local esp = msc:DrawSection({Name = "ESP", Position = "left"})
local vis = msc:DrawSection({Name = "Enemy Visual", Position = "right"})
local fov = msc:DrawSection({Name = "FOV", Position = "left"})
local cross = msc:DrawSection({Name = "Crosshair", Position = "right"})

target:AddToggle({
    Name = "Toggle Targetaim",
    Default = getgenv().x06y.Targetaim.enabled,
    Flag = "toggle_target",
    Risky = true,
    Callback = function(a)
        x.Targetaim.enabled = a
    end,
});
target:AddToggle({
    Name = "Toggle Auto air",
    Default = x.AA.enabled,
    Flag = "toggle_aa",
    Callback = function(a)
       x.AA.enabled = a
    end,
});
target:AddToggle({
   Name = "Toggle Anti Aimviewer",
   Default = getgenv().AntiAimViewer.enabled,
   Flag = "Toggle_aav",
   Callback = function(a)
      getgenv().AntiAimViewer.enabled = a
   end,
});
target:AddDropdown({
    Name = "Hit Part",
    Default = x.Targetaim.hitpart,
    Multi = false,
    Values = {"Head", "UpperTorso", "HumanoidRootPart", "LowerTorso", "RightFoot"},
    Flag = "Choose_Hitpart",
    Callback = function(a)
        x.Targetaim.hitpart = a
    end,
});
target:AddDropdown({
    Name = "Air Part",
    Default = x.AA.hit_part,
    Multi = false,
    Values = {"Head", "UpperTorso", "HumanoidRootPart", "LowerTorso", "RightFoot"},
    Flag = "Choose_Hitpart",
    Callback = function(a)
        x.AA.hit_part = a
    end,
});
target:AddTextBox({
   Name = "Horizontal (x)",
   Default = getgenv().x06y.Targetaim.Horizontal,
   Placeholder = "Input Predictions",
   Callback = function(a)
       getgenv().x06y.Targetaim.Horizontal = a
   end,
});
target:AddTextBox({
    Name = "Vertical (y)",
    Default = x.Targetaim.Vertical,
    Placeholder = "Input Predictions",
    Callback = function(a)
        x.Targetaim.Vertical = a
    end,
});
target:AddTextBox({
    Name = "Jump Offsets",
    Default = getgenv().x06y.AA.jump_offset,
    Placeholder = "Input Offset",
    Callback = function(a)
        getgenv().x06y.AA.jump_offset = a
    end,
});
target:AddTextBox({
    Name = "Fall Offsets",
    Default = getgenv().x06y.AA.fall_offset,
    Placeholder = "Input Offset",
    Callback = function(a)
        getgenv().x06y.AA.fall_offset = a
    end,
});
target:AddTextBox({
    Name = "Air Delay",
    Default = getgenv().x06y.AA.delay,
    Placeholder = "Input Delay",
    Callback = function(a)
        getgenv().x06y.AA.delay = a
    end,
});
cam:AddToggle({
    Name = "Toggle Camlock",
    Default = x.Camlock.enabled,
    Risky = true,
    Flag = "Toggle_Camlock",
    Callback = function(a)
        x.Camlock.enabled = a
    end,
});
cam:AddToggle({
   Name = "Toggle Look At",
   Default = getgenv().LookAtEnabled,
   Flag = "Toggle_lookat",
   Callback = function(a)
       getgenv().LookAtEnabled = a
   end,
});
cam:AddToggle({
    Name = "Toggle Resolver",
    Default = x.Camlock.resolver,
    Risky = true,
    Flag = "Toggle_Camlock",
    Callback = function(a)
        x.Camlock.resolver = a
    end,
});
cam:AddDropdown({
    Name = "Hit Part",
    Default = x.Camlock.hitpart,
    Multi = false,
    Values = {"Head", "UpperTorso", "HumanoidRootPart", "LowerTorso", "RightFoot"},
    Flag = "Choose_Hitparts",
    Callback = function(a)
        x.Camlock.hitpart = a
    end,
});
cam:AddTextBox({
    Name = "X Prediction",
    Default = getgenv().x06y.Camlock.Cxprediction,
    Placeholder = "Input Predictions",
    Callback = function(a)
        getgenv()x06y.Camlock.Cxprediction = a
    end,
});
cam:AddTextBox({
    Name = "Y Prediction",
    Default = getgenv().x06y.Camlock.Cyprediction,
    Placeholder = "Input Predictions",
    Callback = function(a)
        getgenv()x06y.Camlock.Cyprediction = a
    end,
});
cam:AddTextBox({
   Name = "Smoothness",
   Default = x.Camlock.smoothness,
   Placeholder = "Input Smoothness",
   Callback = function(a)
       x.Camlock.smoothness = a
   end,
});
cam:AddTextBox({
    Name = "Shake X",
    Default = x.Camlock.Shake.shake_x,
    Placeholder = "Input Shake",
    Callback = function(a)
        x.Camlock.Shake.shake_x = a
    end,
});
cam:AddTextBox({
    Name = "Shake Y",
    Default = x.Camlock.Shake.shake_y,
    Placeholder = "Input Shake",
    Callback = function(a)
        x.Camlock.Shake.shake_y = a
    end,
});
cam:AddTextBox({
    Name = "Shake Z",
    Default = x.Camlock.Shake.shake_z,
    Placeholder = "Input Shake",
    Callback = function(a)
        x.Camlock.Shake.shake_z = a
    end,
});
sound:AddToggle({
    Name = "Toggle Detection",
    Default = getgenv().hit.detection,
    Flag = "toggle_detection",
    Callback = function(a)
        getgenv().hit.detection = a
    end,
});
sound:AddToggle({
    Name = "Toggle Sound",
    Default = getgenv().hit.sound_enabled,
    Flag = "toggle_sound",
    Callback = function(a)
        getgenv().hit.sound_enabled = a
    end,
});
sound:AddTextBox({
    Name = "Sound Volume",
    Default = getgenv().hit.sound_volume,
    Placeholder = "Input Volume..",
    Callback = function(a)
        getgenv().hit.sound_volume = a
    end,
});
sound:AddDropdown({
    Name = "Sound Names",
    Default = getgenv().hit.sound_id,
    Values = hitSoundsNames,
    Multi = false,
    Flag = "choose_soundid",
    Callback = function(a)
        getgenv().hit.sound_id = a
    end,
});
effects:AddToggle({
    Name = "Toggle Hit Effects",
    Default = getgenv().hiteffects.Enabled,
    Flag = "Toggle_Hiteffect",
    Callback = function(a)
        getgenv().hiteffects.Enabled = a
    end,
});
effects:AddToggle({
    Name = "Toggle Logs",
    Default = getgenv().hit.logs,
    Flag = "toggle_logs",
    Callback = function(a)
        getgenv().hit.logs = a
    end,
});
effects:AddColorPicker({
    Name = "Hit effects color",
    Flag = "Choose_hitefcolor",
	Default = getgenv().hiteffects.HitEffectColor,
	Callback = function(a)
	    getgenv().hiteffects.HitEffectColor = a
    end,
});
effects:AddDropdown({
    Name = "Effects",
    Default = getgenv().hiteffects.HitEffectType,
    Values = hiteffect,
    Multi = false,
    Flag = "choose_effecttype",
    Callback = function(a)
        getgenv().hiteffects.HitEffectType = a
    end,
});
local haha = chamz:AddToggle({
    Name = "Toggle Hit-Chams",
    Default = getgenv().HitChams.enabled,
    Flag = "Toggle_hitcham",
    Callback = function(a)
        getgenv().HitChams.enabled = a
    end,
});
haha.Link:AddColorPicker({
	Default = getgenv().HitChams.color,
	Callback = function(a)
	    getgenv().HitChams.color = a
    end,
});
chamz:AddTextBox({
    Name = "Transparency",
    Default = getgenv().HitChams.transparency,
    Placeholder = "Insert Value",
    Callback = function(a)
        getgenv().HitChams.transparency = a
    end,
});
chamz:AddTextBox({
    Name = "Duration",
    Default = getgenv().HitChams.duration,
    Placeholder = "Insert Value",
    Callback = function(a)
        getgenv().HitChams.duration = a
    end,
});
csync:AddToggle({
    Name = "Toggle CSync",
    Default = getgenv().orbit.enabled,
    Risky = true,
    Flag = "toggle_csync",
    Callback = function(a)
        getgenv().orbit.enabled = a
    end,
});
csync:AddDropdown({
    Name = "Mode",
    Default = getgenv().orbit.type,
    Values = {"none", "melee", "gun"},
    Multi = false,
    Flag = "choose_type",
    Callback = function(a)
        getgenv().orbit.type = a
    end,
});
csync:AddTextBox({
    Name = "Speed",
    Default = getgenv().orbit.speed,
    Placeholder = "input speed",
    Callback = function(a)
        getgenv().orbit.speed = a
    end,
});
csync:AddTextBox({
    Name = "Distance",
    Default = getgenv().orbit.distance,
    Placeholder = "Input Distance",
    Callback = function(a)
        getgenv().orbit.distance = a
    end,
});
csync:AddTextBox({
    Name = "Height",
    Default = getgenv().orbit.height,
    Placeholder = "Input Height",
    Callback = function(a)
        getgenv().orbit.height = a
    end,
});
cframe:AddToggle({
   Name = "Toggle TPWalk",
   Default = getgenv().cframe.settings.enabled,
   Flag = "toggle_tpwalk",
   Callback = function(a)
       getgenv().cframe.settings.enabled = a
   end,
});
cframe:AddToggle({
    Name = "Showbutton",
    Default = getgenv().cframe.settings.showbutton,
    Flag = "toggle_showbutton",
    Callback = function(a)
        getgenv().cframe.settings.showbutton = a
        if a then
            CreateCFrameButton()
        else
           DestroyCFrameButton()
        end
    end,
});
cframe:AddTextBox({
    Name = "Speed",
    Default = getgenv().cframe.settings.speed,
    Placeholder = "Input Speed",
    Callback = function(a)
        getgenv().cframe.settings.speed = a
    end,
});
gun:AddToggle({
    Name = "Toggle AutoReload",
    Default = getgenv().AutoReloadEnabled,
    Flag = "toggle_autor",
    Callback = function(a)
        getgenv().AutoReloadEnabled = a
    end,
});
gun:AddButton({
	Name = "Auto Shoot",
	Callback = function()
		local ScreenGui = Instance.new("ScreenGui")
        ScreenGui.Parent = game.CoreGui

        local button = Instance.new("TextButton")
        button.Size = UDim2.new(0, 75, 0, 50)
        button.Position = UDim2.new(0.5, -100, 0.5, -25)
        button.Text = "Auto Shoot"
        button.BackgroundColor3 = Color3.new(0, 0, 0)
        button.BackgroundTransparency = 0.3
        button.TextColor3 = Color3.fromRGB(255, 255, 255)
        button.Font = Enum.Font.Code
        button.TextWrapped = true
        button.TextScaled = true
        button.Parent = ScreenGui
        button.Draggable = true
        button.Active = true
        button.Selectable = true
        
        local Outline = Instance.new("UIStroke")
        Outline.Color = Color3.fromRGB(250, 250, 250)
        Outline.Thickness = 2
        Outline.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
        Outline.Parent = button
        
        local Gradient = Instance.new("UIGradient")
        Gradient.Color = ColorSequence.new({
            ColorSequenceKeypoint.new(0, Color3.fromRGB(255, 255, 255)), 
            ColorSequenceKeypoint.new(1, Color3.fromRGB(170, 170, 170))  
        })
        Gradient.Rotation = 45
        Gradient.Parent = Outline

        local UICorner = Instance.new("UICorner")
        UICorner.Parent = button

        local autoShooting = false

        local function autoShoot()
            while autoShooting do
                local character = game.Players.LocalPlayer.Character
                if character then
                    local tool = character:FindFirstChildOfClass("Tool")
                    if tool and tool:FindFirstChild("Handle") then
                        tool:Activate()
                    end
                end
                task.wait()
            end
        end

        button.MouseButton1Click:Connect(function()
            autoShooting = not autoShooting

            if autoShooting then
                button.TextColor3 = Color3.fromRGB(0, 255, 0)
                task.spawn(autoShoot)
            else
               button.TextColor3 = Color3.fromRGB(255, 255, 255)
           end
       end)
	end,
})
esp:AddToggle({
    Name = "Toggle ESP",
    Default = getgenv().ESPsc.Enabled,
    Flag = "togle_esp",
    Callback = function(a)
        getgenv().ESPsc.Enabled = a
    end,
});
esp:AddToggle({
    Name = "Only Target",
    Default = getgenv().ESPsc.Target,
    Flag = "target_only",
    Callback = function(a)
        getgenv().ESPsc.Target = a
    end,
});
local box = esp:AddToggle({
    Name = "Box",
    Default = getgenv().ESPsc.Box.Enabled,
    Flag = "toggle_box",
    Callback = function(a)
        getgenv().ESPsc.Box.Enabled = a
    end,
});
box.Link:AddColorPicker({
    Default = getgenv().ESPsc.Box.Color,
    Callback = function(a)
        getgenv().ESPsc.Box.Color = a
    end,
});
local health = esp:AddToggle({
    Name = "Healthbar",
    Default = getgenv().ESPsc.Healthbar.Enabled,
    Flag = "toggle_healthbar",
    Callback = function(a)
        getgenv().ESPsc.Healthbar.Enabled = a
    end,
});
health.Link:AddColorPicker({
    Default = getgenv().ESPsc.Healthbar.Color,
    Callback = function(a)
        getgenv().ESPsc.Healthbar.Color = a
    end,
});
local Name = esp:AddToggle({
    Name = "Name",
    Default = getgenv().ESPsc.Name.Enabled,
    Flag = "toggle_name",
    Callback = function(a)
        getgenv().ESPsc.Name.Enabled = a
    end,
});
Name.Link:AddColorPicker({
    Default = getgenv().ESPsc.Name.Color,
    Callback = function(a)
        getgenv().ESPsc.Name.Color = a
    end,
});
local trace = esp:AddToggle({
    Name = "Unlock Tracer",
    Default = getgenv().ESPsc.Tracer.Unlock_Tracer,
    Flag = "toggle_tracer",
    Callback = function(a)
        getgenv().ESPsc.Tracer.Unlock_Tracer = a
    end,
});
trace.Link:AddColorPicker({
    Default = getgenv().ESPsc.Tracer.Color,
    Callback = function(a)
        getgenv().ESPsc.Tracer.Color = a
    end,
});
local tol = esp:AddToggle({
    Name = "Tool",
    Default = getgenv().ESPsc.Tools.Enabled,
    Flag = "toggle_tool",
    Callback = function(a)
        getgenv().ESPsc.Tools.Enabled = a
    end,
});
tol.Link:AddColorPicker({
    Default = getgenv().ESPsc.Tools.Color,
    Callback = function(a)
        getgenv().ESPsc.Tools.Color = a
    end,
});
local mag = esp:AddToggle({
    Name = "Distance",
    Default = getgenv().ESPsc.Distance.Enabled,
    Flag = "toggle_dis",
    Callback = function(a)
        getgenv().ESPsc.Distance.Enabled = a
    end,
});
mag.Link:AddColorPicker({
    Default = getgenv().ESPsc.Distance.Color,
    Callback = function(a)
        getgenv().ESPsc.Distance.Color = a
    end,
});
local ske = esp:AddToggle({
    Name = "Skeleton",
    Default = getgenv().ESPsc.Skeleton.Enabled,
    Flag = "toggle_Skel",
    Callback = function(a)
        getgenv().ESPsc.Skeleton.Enabled = a
    end,
});
ske.Link:AddColorPicker({
    Default = getgenv().ESPsc.Skeleton.Color,
    Callback = function(a)
        getgenv().ESPsc.Skeleton.Color = a
    end,
});
vis:AddToggle({
    Name = "Toggle Visualize",
    Default = getgenv().Visualize.Enabled,
    Flag = "toggle_vis",
    Callback = function(a)
        getgenv().Visualize.Enabled = a
    end,
});
local hi = vis:AddToggle({
    Name = "Highlight",
    Default = getgenv().Visualize.Highlight.Enabled,
    Flag = "toggle_high",
    Callback = function(a)
        getgenv().Visualize.Highlight.Enabled = a
    end,
});
hi.Link:AddColorPicker({
    Default = getgenv().Visualize.Highlight.Fill,
    Callback = function(k)
        getgenv().Visualize.Highlight.Fill = k
    end,
});
hi.Link:AddColorPicker({
    Default = getgenv().Visualize.Highlight.Outline,
    Callback = function(a)
        getgenv().Visualize.Highlight.Outline = a
    end,
});
local dotzz = vis:AddToggle({
    Name = "Dot",
    Default = getgenv().Visualize.Dot.Enabled,
    Flag = "toggle_do",
    Callback = function(a)
        getgenv().Visualize.Dot.Enabled = a
    end,
});
dotzz.Link:AddColorPicker({
    Default = getgenv().Visualize.Dot.Color,
    Callback = function(a)
        getgenv().Visualize.Dot.Color = a
    end,
});
vis:AddTextBox({
    Name = "Dot Size",
    Default = getgenv().Visualize.Dot.Size,
    Placeholder = "Input Size..",
    Callback = function(a)
        getgenv().Visualize.Dot.Size = a
    end,
});
local fbb = fov:AddToggle({
    Name = "Toggle FOV",
    Default = getgenv().exlareCircle.enabled,
    Flag = "toggle_circle",
    Callback = function(v)
        getgenv().exlareCircle.enabled = v
    end,
});
fbb.Link:AddColorPicker({
    Default = getgenv().exlareCircle.color,
    Callback = function(a)
        getgenv().exlareCircle.color = a
    end,
});
fov:AddToggle({
    Name = "FOV filled",
    Default = getgenv().exlareCircle.filled,
    Flag = "toggle_fovfilled",
    Callback = function(a)
        getgenv().exlareCircle.filled = a
    end,
});
fov:AddTextBox({
    Name = "Radius",
    Default = getgenv().exlareCircle.radius,
    Placeholder = "Input Radius..",
    Callback = function(a)
        getgenv().exlareCircle.radius = a or 100
    end,
});
local xcxc = cross:AddToggle({
    Name = "Toggle Crosshair",
    Default = getgenv().crosshair.enabled,
    Flag = "toggle_crosshair",
    Callback = function(a)
        getgenv().crosshair.enabled = a
    end,
});
xcxc.Link:AddColorPicker({
    Default = getgenv().crosshair.color,
    Callback = function(a)
        getgenv().crosshair.color = a
    end,
});
cross:AddToggle({
    Name = "Spin",
    Default = getgenv().crosshair.spin,
    Flag = "toggle_spin",
    Callback = function(a)
        getgenv().crosshair.spin = a
    end,
});
cross:AddToggle({
    Name = "Resize",
    Default = getgenv().crosshair.resize,
    Flag = "toggle_resize",
    Callback = function(a)
        getgenv().crosshair.resize = a
    end,
});
cross:AddDropdown({
    Name = "Mode",
    Default = getgenv().crosshair.mode,
    Values = {"center", "mouse"},
    Multi = false,
    Flag = "crosshair_mode",
    Callback = function(a)
        getgenv().crosshair.mode = a
    end,
});
cross:AddSlider({
    Name = "Spin Speed",
    Default = getgenv().crosshair.spin_speed,
    Min = 50,
    Max = 300,
    Round = 0,
    Flag = "slide_speed",
    Callback = function(a)
        getgenv().crosshair.spin_speed = a
    end,
});
cross:AddSlider({
    Name = "Resize Speed",
    Default = getgenv().crosshair.resize_speed,
    Min = 50,
    Max = 200,
    Round = 0,
    Flag = "slide_resizesp",
    Callback = function(a)
        getgenv().crosshair.resize_speed = a
    end,
});

Window:DrawCategory({Name = "Settings"});

local ThemeUI = Window:DrawTab({Name = "Themes", Icon = "brush", EnableScrolling = true});

local shits = ThemeUI:DrawSection({Name = "UI Themes", Position = "left"})

shits:AddDropdown({
	Name = "Select Theme",
	Default = "Default",
	Values = {
		"Default",
		"Dark Green",
		"Dark Blue",
		"Purple Rose",
		"Skeet"
	},
	Callback = function(v)
		Compkiller:SetTheme(v)
	end,
})

local ConfigUI = Window:DrawConfig({Name = "Config", Icon = "cog", Config = ConfigManager});

ConfigManager:GetConfigs()

ConfigUI:Init();
